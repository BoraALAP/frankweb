# source: https://eu1.prisma.sh/bora-alap-3bfda9/dev/dev
# timestamp: Thu Mar 19 2020 16:47:56 GMT-0400 (Eastern Daylight Time)

type AggregateDoor {
  count: Int!
}

type AggregateDoorCollection {
  count: Int!
}

type AggregateDoorLine {
  count: Int!
}

type AggregateFrameProfiles {
  count: Int!
}

type AggregateSidelites {
  count: Int!
}

type AggregateStyleLayoutPairs {
  count: Int!
}

type AggregateStyleShape {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Door {
  Id: ID!
  Brand: String!
  StyleNumber: String!
  ArchitecturalStyle: [String!]!
  DoorCollection: DoorCollection
  DoorLine: DoorLine
  ProductLine: String
  DoorType: String
  FrameProfiles(where: FrameProfilesWhereInput, orderBy: FrameProfilesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FrameProfiles!]
  DefaultFrameProfile: FrameProfiles
  ParentGlassFamilyAbbreviation: String
  GlassFamilyAbbreviation: String
  LiteQuantity: Int
  LocationOnHouse: [String!]!
  AvailableSizeDetails: [String!]!
  AvailableSizes: [String!]!
  DefaultSize: String
  VisualizedHeight: Int
  VisualizedWidth: Int
  StyleGroups: [String!]!
  StyleShape: StyleShape
  RatingEligibility: [String!]!
  LaunchYear: Int
  RecentlyLaunched: Boolean
  GlassSizeCategory: String
  SupportedAccessories: [String!]!
  AllowedSidelites: [String!]!
  AllowedTransoms: [String!]!
  DefaultSidelite: String
  DefaultTransom: String
  DefaultGlassWidth: String
  AbstractPrice: Int
  SOSPrice: Float
  MDSPrice: Float
  LowesStocked: Boolean
  GlassType: String
  GlassDesign: String
  GlassFeatures: [String!]!
  DefaultImageName: String
  ImageUrl: String
  Ordinal: Int
  GlassAssociation: String
  IsLimitedAvailability: Boolean
  LimitedAvailabilityCategories: [String!]!
  ProductTrends: String
  DefaultDoorSurroundStyleNumber: String
  StyleLayoutPairs: StyleLayoutPairs
  GrainProfile: String
  CurrentYearTrends: [String!]!
  LydDisplay: Boolean
  LydDefaultFinishId: String
  LydAvailableFinishIds: [String!]!
  LydGlassCategory: String
  LydDisplayOrder: Int
  LydDisplayCaming: String
  FacetMaterial: String
  FacetRecentlyLaunched: String
  RelatedStyleID: String
  AllowsHandlesets: Boolean
  IsFlushGlazed: Boolean
  Sidelites(where: SidelitesWhereInput, orderBy: SidelitesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Sidelites!]
}

type DoorCollection {
  Id: ID!
  Brand: String
  Name: String
  ShortName: String
  Abbreviation: String!
  Material: String
  Surface: String
  Accugrain: Boolean
  Paintable: Boolean
  Stainable: Boolean
  Doors(where: DoorWhereInput, orderBy: DoorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Door!]
}

"""A connection to a list of items."""
type DoorCollectionConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [DoorCollectionEdge]!
  aggregate: AggregateDoorCollection!
}

input DoorCollectionCreateInput {
  Id: ID
  Brand: String
  Name: String
  ShortName: String
  Abbreviation: String!
  Material: String
  Surface: String
  Accugrain: Boolean
  Paintable: Boolean
  Stainable: Boolean
  Doors: DoorCreateManyWithoutDoorCollectionInput
}

input DoorCollectionCreateOneWithoutDoorsInput {
  create: DoorCollectionCreateWithoutDoorsInput
  connect: DoorCollectionWhereUniqueInput
}

input DoorCollectionCreateWithoutDoorsInput {
  Id: ID
  Brand: String
  Name: String
  ShortName: String
  Abbreviation: String!
  Material: String
  Surface: String
  Accugrain: Boolean
  Paintable: Boolean
  Stainable: Boolean
}

"""An edge in a connection."""
type DoorCollectionEdge {
  """The item at the end of the edge."""
  node: DoorCollection!

  """A cursor for use in pagination."""
  cursor: String!
}

enum DoorCollectionOrderByInput {
  Id_ASC
  Id_DESC
  Brand_ASC
  Brand_DESC
  Name_ASC
  Name_DESC
  ShortName_ASC
  ShortName_DESC
  Abbreviation_ASC
  Abbreviation_DESC
  Material_ASC
  Material_DESC
  Surface_ASC
  Surface_DESC
  Accugrain_ASC
  Accugrain_DESC
  Paintable_ASC
  Paintable_DESC
  Stainable_ASC
  Stainable_DESC
}

type DoorCollectionPreviousValues {
  Id: ID!
  Brand: String
  Name: String
  ShortName: String
  Abbreviation: String!
  Material: String
  Surface: String
  Accugrain: Boolean
  Paintable: Boolean
  Stainable: Boolean
}

type DoorCollectionSubscriptionPayload {
  mutation: MutationType!
  node: DoorCollection
  updatedFields: [String!]
  previousValues: DoorCollectionPreviousValues
}

input DoorCollectionSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [DoorCollectionSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [DoorCollectionSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DoorCollectionSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: DoorCollectionWhereInput
}

input DoorCollectionUpdateInput {
  Brand: String
  Name: String
  ShortName: String
  Abbreviation: String
  Material: String
  Surface: String
  Accugrain: Boolean
  Paintable: Boolean
  Stainable: Boolean
  Doors: DoorUpdateManyWithoutDoorCollectionInput
}

input DoorCollectionUpdateManyMutationInput {
  Brand: String
  Name: String
  ShortName: String
  Abbreviation: String
  Material: String
  Surface: String
  Accugrain: Boolean
  Paintable: Boolean
  Stainable: Boolean
}

input DoorCollectionUpdateOneWithoutDoorsInput {
  create: DoorCollectionCreateWithoutDoorsInput
  connect: DoorCollectionWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: DoorCollectionUpdateWithoutDoorsDataInput
  upsert: DoorCollectionUpsertWithoutDoorsInput
}

input DoorCollectionUpdateWithoutDoorsDataInput {
  Brand: String
  Name: String
  ShortName: String
  Abbreviation: String
  Material: String
  Surface: String
  Accugrain: Boolean
  Paintable: Boolean
  Stainable: Boolean
}

input DoorCollectionUpsertWithoutDoorsInput {
  update: DoorCollectionUpdateWithoutDoorsDataInput!
  create: DoorCollectionCreateWithoutDoorsInput!
}

input DoorCollectionWhereInput {
  """Logical AND on all given filters."""
  AND: [DoorCollectionWhereInput!]

  """Logical OR on all given filters."""
  OR: [DoorCollectionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DoorCollectionWhereInput!]
  Id: ID

  """All values that are not equal to given value."""
  Id_not: ID

  """All values that are contained in given list."""
  Id_in: [ID!]

  """All values that are not contained in given list."""
  Id_not_in: [ID!]

  """All values less than the given value."""
  Id_lt: ID

  """All values less than or equal the given value."""
  Id_lte: ID

  """All values greater than the given value."""
  Id_gt: ID

  """All values greater than or equal the given value."""
  Id_gte: ID

  """All values containing the given string."""
  Id_contains: ID

  """All values not containing the given string."""
  Id_not_contains: ID

  """All values starting with the given string."""
  Id_starts_with: ID

  """All values not starting with the given string."""
  Id_not_starts_with: ID

  """All values ending with the given string."""
  Id_ends_with: ID

  """All values not ending with the given string."""
  Id_not_ends_with: ID
  Brand: String

  """All values that are not equal to given value."""
  Brand_not: String

  """All values that are contained in given list."""
  Brand_in: [String!]

  """All values that are not contained in given list."""
  Brand_not_in: [String!]

  """All values less than the given value."""
  Brand_lt: String

  """All values less than or equal the given value."""
  Brand_lte: String

  """All values greater than the given value."""
  Brand_gt: String

  """All values greater than or equal the given value."""
  Brand_gte: String

  """All values containing the given string."""
  Brand_contains: String

  """All values not containing the given string."""
  Brand_not_contains: String

  """All values starting with the given string."""
  Brand_starts_with: String

  """All values not starting with the given string."""
  Brand_not_starts_with: String

  """All values ending with the given string."""
  Brand_ends_with: String

  """All values not ending with the given string."""
  Brand_not_ends_with: String
  Name: String

  """All values that are not equal to given value."""
  Name_not: String

  """All values that are contained in given list."""
  Name_in: [String!]

  """All values that are not contained in given list."""
  Name_not_in: [String!]

  """All values less than the given value."""
  Name_lt: String

  """All values less than or equal the given value."""
  Name_lte: String

  """All values greater than the given value."""
  Name_gt: String

  """All values greater than or equal the given value."""
  Name_gte: String

  """All values containing the given string."""
  Name_contains: String

  """All values not containing the given string."""
  Name_not_contains: String

  """All values starting with the given string."""
  Name_starts_with: String

  """All values not starting with the given string."""
  Name_not_starts_with: String

  """All values ending with the given string."""
  Name_ends_with: String

  """All values not ending with the given string."""
  Name_not_ends_with: String
  ShortName: String

  """All values that are not equal to given value."""
  ShortName_not: String

  """All values that are contained in given list."""
  ShortName_in: [String!]

  """All values that are not contained in given list."""
  ShortName_not_in: [String!]

  """All values less than the given value."""
  ShortName_lt: String

  """All values less than or equal the given value."""
  ShortName_lte: String

  """All values greater than the given value."""
  ShortName_gt: String

  """All values greater than or equal the given value."""
  ShortName_gte: String

  """All values containing the given string."""
  ShortName_contains: String

  """All values not containing the given string."""
  ShortName_not_contains: String

  """All values starting with the given string."""
  ShortName_starts_with: String

  """All values not starting with the given string."""
  ShortName_not_starts_with: String

  """All values ending with the given string."""
  ShortName_ends_with: String

  """All values not ending with the given string."""
  ShortName_not_ends_with: String
  Abbreviation: String

  """All values that are not equal to given value."""
  Abbreviation_not: String

  """All values that are contained in given list."""
  Abbreviation_in: [String!]

  """All values that are not contained in given list."""
  Abbreviation_not_in: [String!]

  """All values less than the given value."""
  Abbreviation_lt: String

  """All values less than or equal the given value."""
  Abbreviation_lte: String

  """All values greater than the given value."""
  Abbreviation_gt: String

  """All values greater than or equal the given value."""
  Abbreviation_gte: String

  """All values containing the given string."""
  Abbreviation_contains: String

  """All values not containing the given string."""
  Abbreviation_not_contains: String

  """All values starting with the given string."""
  Abbreviation_starts_with: String

  """All values not starting with the given string."""
  Abbreviation_not_starts_with: String

  """All values ending with the given string."""
  Abbreviation_ends_with: String

  """All values not ending with the given string."""
  Abbreviation_not_ends_with: String
  Material: String

  """All values that are not equal to given value."""
  Material_not: String

  """All values that are contained in given list."""
  Material_in: [String!]

  """All values that are not contained in given list."""
  Material_not_in: [String!]

  """All values less than the given value."""
  Material_lt: String

  """All values less than or equal the given value."""
  Material_lte: String

  """All values greater than the given value."""
  Material_gt: String

  """All values greater than or equal the given value."""
  Material_gte: String

  """All values containing the given string."""
  Material_contains: String

  """All values not containing the given string."""
  Material_not_contains: String

  """All values starting with the given string."""
  Material_starts_with: String

  """All values not starting with the given string."""
  Material_not_starts_with: String

  """All values ending with the given string."""
  Material_ends_with: String

  """All values not ending with the given string."""
  Material_not_ends_with: String
  Surface: String

  """All values that are not equal to given value."""
  Surface_not: String

  """All values that are contained in given list."""
  Surface_in: [String!]

  """All values that are not contained in given list."""
  Surface_not_in: [String!]

  """All values less than the given value."""
  Surface_lt: String

  """All values less than or equal the given value."""
  Surface_lte: String

  """All values greater than the given value."""
  Surface_gt: String

  """All values greater than or equal the given value."""
  Surface_gte: String

  """All values containing the given string."""
  Surface_contains: String

  """All values not containing the given string."""
  Surface_not_contains: String

  """All values starting with the given string."""
  Surface_starts_with: String

  """All values not starting with the given string."""
  Surface_not_starts_with: String

  """All values ending with the given string."""
  Surface_ends_with: String

  """All values not ending with the given string."""
  Surface_not_ends_with: String
  Accugrain: Boolean

  """All values that are not equal to given value."""
  Accugrain_not: Boolean
  Paintable: Boolean

  """All values that are not equal to given value."""
  Paintable_not: Boolean
  Stainable: Boolean

  """All values that are not equal to given value."""
  Stainable_not: Boolean
  Doors_every: DoorWhereInput
  Doors_some: DoorWhereInput
  Doors_none: DoorWhereInput
}

input DoorCollectionWhereUniqueInput {
  Id: ID
  Abbreviation: String
}

"""A connection to a list of items."""
type DoorConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [DoorEdge]!
  aggregate: AggregateDoor!
}

input DoorCreateAllowedSidelitesInput {
  set: [String!]
}

input DoorCreateAllowedTransomsInput {
  set: [String!]
}

input DoorCreateArchitecturalStyleInput {
  set: [String!]
}

input DoorCreateAvailableSizeDetailsInput {
  set: [String!]
}

input DoorCreateAvailableSizesInput {
  set: [String!]
}

input DoorCreateCurrentYearTrendsInput {
  set: [String!]
}

input DoorCreateGlassFeaturesInput {
  set: [String!]
}

input DoorCreateInput {
  Id: ID
  Brand: String!
  StyleNumber: String!
  ProductLine: String
  DoorType: String
  ParentGlassFamilyAbbreviation: String
  GlassFamilyAbbreviation: String
  LiteQuantity: Int
  DefaultSize: String
  VisualizedHeight: Int
  VisualizedWidth: Int
  LaunchYear: Int
  RecentlyLaunched: Boolean
  GlassSizeCategory: String
  DefaultSidelite: String
  DefaultTransom: String
  DefaultGlassWidth: String
  AbstractPrice: Int
  SOSPrice: Float
  MDSPrice: Float
  LowesStocked: Boolean
  GlassType: String
  GlassDesign: String
  DefaultImageName: String
  ImageUrl: String
  Ordinal: Int
  GlassAssociation: String
  IsLimitedAvailability: Boolean
  ProductTrends: String
  DefaultDoorSurroundStyleNumber: String
  GrainProfile: String
  LydDisplay: Boolean
  LydDefaultFinishId: String
  LydGlassCategory: String
  LydDisplayOrder: Int
  LydDisplayCaming: String
  FacetMaterial: String
  FacetRecentlyLaunched: String
  RelatedStyleID: String
  AllowsHandlesets: Boolean
  IsFlushGlazed: Boolean
  ArchitecturalStyle: DoorCreateArchitecturalStyleInput
  LocationOnHouse: DoorCreateLocationOnHouseInput
  AvailableSizeDetails: DoorCreateAvailableSizeDetailsInput
  AvailableSizes: DoorCreateAvailableSizesInput
  StyleGroups: DoorCreateStyleGroupsInput
  RatingEligibility: DoorCreateRatingEligibilityInput
  SupportedAccessories: DoorCreateSupportedAccessoriesInput
  AllowedSidelites: DoorCreateAllowedSidelitesInput
  AllowedTransoms: DoorCreateAllowedTransomsInput
  GlassFeatures: DoorCreateGlassFeaturesInput
  LimitedAvailabilityCategories: DoorCreateLimitedAvailabilityCategoriesInput
  CurrentYearTrends: DoorCreateCurrentYearTrendsInput
  LydAvailableFinishIds: DoorCreateLydAvailableFinishIdsInput
  DoorCollection: DoorCollectionCreateOneWithoutDoorsInput
  DoorLine: DoorLineCreateOneWithoutDoorsInput
  FrameProfiles: FrameProfilesCreateManyWithoutDoorsInput
  DefaultFrameProfile: FrameProfilesCreateOneInput
  StyleShape: StyleShapeCreateOneWithoutDoorsInput
  StyleLayoutPairs: StyleLayoutPairsCreateOneWithoutDoorsInput
  Sidelites: SidelitesCreateManyWithoutDoorsInput
}

input DoorCreateLimitedAvailabilityCategoriesInput {
  set: [String!]
}

input DoorCreateLocationOnHouseInput {
  set: [String!]
}

input DoorCreateLydAvailableFinishIdsInput {
  set: [String!]
}

input DoorCreateManyWithoutDoorCollectionInput {
  create: [DoorCreateWithoutDoorCollectionInput!]
  connect: [DoorWhereUniqueInput!]
}

input DoorCreateManyWithoutDoorLineInput {
  create: [DoorCreateWithoutDoorLineInput!]
  connect: [DoorWhereUniqueInput!]
}

input DoorCreateManyWithoutFrameProfilesInput {
  create: [DoorCreateWithoutFrameProfilesInput!]
  connect: [DoorWhereUniqueInput!]
}

input DoorCreateManyWithoutSidelitesInput {
  create: [DoorCreateWithoutSidelitesInput!]
  connect: [DoorWhereUniqueInput!]
}

input DoorCreateManyWithoutStyleLayoutPairsInput {
  create: [DoorCreateWithoutStyleLayoutPairsInput!]
  connect: [DoorWhereUniqueInput!]
}

input DoorCreateManyWithoutStyleShapeInput {
  create: [DoorCreateWithoutStyleShapeInput!]
  connect: [DoorWhereUniqueInput!]
}

input DoorCreateRatingEligibilityInput {
  set: [String!]
}

input DoorCreateStyleGroupsInput {
  set: [String!]
}

input DoorCreateSupportedAccessoriesInput {
  set: [String!]
}

input DoorCreateWithoutDoorCollectionInput {
  Id: ID
  Brand: String!
  StyleNumber: String!
  ProductLine: String
  DoorType: String
  ParentGlassFamilyAbbreviation: String
  GlassFamilyAbbreviation: String
  LiteQuantity: Int
  DefaultSize: String
  VisualizedHeight: Int
  VisualizedWidth: Int
  LaunchYear: Int
  RecentlyLaunched: Boolean
  GlassSizeCategory: String
  DefaultSidelite: String
  DefaultTransom: String
  DefaultGlassWidth: String
  AbstractPrice: Int
  SOSPrice: Float
  MDSPrice: Float
  LowesStocked: Boolean
  GlassType: String
  GlassDesign: String
  DefaultImageName: String
  ImageUrl: String
  Ordinal: Int
  GlassAssociation: String
  IsLimitedAvailability: Boolean
  ProductTrends: String
  DefaultDoorSurroundStyleNumber: String
  GrainProfile: String
  LydDisplay: Boolean
  LydDefaultFinishId: String
  LydGlassCategory: String
  LydDisplayOrder: Int
  LydDisplayCaming: String
  FacetMaterial: String
  FacetRecentlyLaunched: String
  RelatedStyleID: String
  AllowsHandlesets: Boolean
  IsFlushGlazed: Boolean
  ArchitecturalStyle: DoorCreateArchitecturalStyleInput
  LocationOnHouse: DoorCreateLocationOnHouseInput
  AvailableSizeDetails: DoorCreateAvailableSizeDetailsInput
  AvailableSizes: DoorCreateAvailableSizesInput
  StyleGroups: DoorCreateStyleGroupsInput
  RatingEligibility: DoorCreateRatingEligibilityInput
  SupportedAccessories: DoorCreateSupportedAccessoriesInput
  AllowedSidelites: DoorCreateAllowedSidelitesInput
  AllowedTransoms: DoorCreateAllowedTransomsInput
  GlassFeatures: DoorCreateGlassFeaturesInput
  LimitedAvailabilityCategories: DoorCreateLimitedAvailabilityCategoriesInput
  CurrentYearTrends: DoorCreateCurrentYearTrendsInput
  LydAvailableFinishIds: DoorCreateLydAvailableFinishIdsInput
  DoorLine: DoorLineCreateOneWithoutDoorsInput
  FrameProfiles: FrameProfilesCreateManyWithoutDoorsInput
  DefaultFrameProfile: FrameProfilesCreateOneInput
  StyleShape: StyleShapeCreateOneWithoutDoorsInput
  StyleLayoutPairs: StyleLayoutPairsCreateOneWithoutDoorsInput
  Sidelites: SidelitesCreateManyWithoutDoorsInput
}

input DoorCreateWithoutDoorLineInput {
  Id: ID
  Brand: String!
  StyleNumber: String!
  ProductLine: String
  DoorType: String
  ParentGlassFamilyAbbreviation: String
  GlassFamilyAbbreviation: String
  LiteQuantity: Int
  DefaultSize: String
  VisualizedHeight: Int
  VisualizedWidth: Int
  LaunchYear: Int
  RecentlyLaunched: Boolean
  GlassSizeCategory: String
  DefaultSidelite: String
  DefaultTransom: String
  DefaultGlassWidth: String
  AbstractPrice: Int
  SOSPrice: Float
  MDSPrice: Float
  LowesStocked: Boolean
  GlassType: String
  GlassDesign: String
  DefaultImageName: String
  ImageUrl: String
  Ordinal: Int
  GlassAssociation: String
  IsLimitedAvailability: Boolean
  ProductTrends: String
  DefaultDoorSurroundStyleNumber: String
  GrainProfile: String
  LydDisplay: Boolean
  LydDefaultFinishId: String
  LydGlassCategory: String
  LydDisplayOrder: Int
  LydDisplayCaming: String
  FacetMaterial: String
  FacetRecentlyLaunched: String
  RelatedStyleID: String
  AllowsHandlesets: Boolean
  IsFlushGlazed: Boolean
  ArchitecturalStyle: DoorCreateArchitecturalStyleInput
  LocationOnHouse: DoorCreateLocationOnHouseInput
  AvailableSizeDetails: DoorCreateAvailableSizeDetailsInput
  AvailableSizes: DoorCreateAvailableSizesInput
  StyleGroups: DoorCreateStyleGroupsInput
  RatingEligibility: DoorCreateRatingEligibilityInput
  SupportedAccessories: DoorCreateSupportedAccessoriesInput
  AllowedSidelites: DoorCreateAllowedSidelitesInput
  AllowedTransoms: DoorCreateAllowedTransomsInput
  GlassFeatures: DoorCreateGlassFeaturesInput
  LimitedAvailabilityCategories: DoorCreateLimitedAvailabilityCategoriesInput
  CurrentYearTrends: DoorCreateCurrentYearTrendsInput
  LydAvailableFinishIds: DoorCreateLydAvailableFinishIdsInput
  DoorCollection: DoorCollectionCreateOneWithoutDoorsInput
  FrameProfiles: FrameProfilesCreateManyWithoutDoorsInput
  DefaultFrameProfile: FrameProfilesCreateOneInput
  StyleShape: StyleShapeCreateOneWithoutDoorsInput
  StyleLayoutPairs: StyleLayoutPairsCreateOneWithoutDoorsInput
  Sidelites: SidelitesCreateManyWithoutDoorsInput
}

input DoorCreateWithoutFrameProfilesInput {
  Id: ID
  Brand: String!
  StyleNumber: String!
  ProductLine: String
  DoorType: String
  ParentGlassFamilyAbbreviation: String
  GlassFamilyAbbreviation: String
  LiteQuantity: Int
  DefaultSize: String
  VisualizedHeight: Int
  VisualizedWidth: Int
  LaunchYear: Int
  RecentlyLaunched: Boolean
  GlassSizeCategory: String
  DefaultSidelite: String
  DefaultTransom: String
  DefaultGlassWidth: String
  AbstractPrice: Int
  SOSPrice: Float
  MDSPrice: Float
  LowesStocked: Boolean
  GlassType: String
  GlassDesign: String
  DefaultImageName: String
  ImageUrl: String
  Ordinal: Int
  GlassAssociation: String
  IsLimitedAvailability: Boolean
  ProductTrends: String
  DefaultDoorSurroundStyleNumber: String
  GrainProfile: String
  LydDisplay: Boolean
  LydDefaultFinishId: String
  LydGlassCategory: String
  LydDisplayOrder: Int
  LydDisplayCaming: String
  FacetMaterial: String
  FacetRecentlyLaunched: String
  RelatedStyleID: String
  AllowsHandlesets: Boolean
  IsFlushGlazed: Boolean
  ArchitecturalStyle: DoorCreateArchitecturalStyleInput
  LocationOnHouse: DoorCreateLocationOnHouseInput
  AvailableSizeDetails: DoorCreateAvailableSizeDetailsInput
  AvailableSizes: DoorCreateAvailableSizesInput
  StyleGroups: DoorCreateStyleGroupsInput
  RatingEligibility: DoorCreateRatingEligibilityInput
  SupportedAccessories: DoorCreateSupportedAccessoriesInput
  AllowedSidelites: DoorCreateAllowedSidelitesInput
  AllowedTransoms: DoorCreateAllowedTransomsInput
  GlassFeatures: DoorCreateGlassFeaturesInput
  LimitedAvailabilityCategories: DoorCreateLimitedAvailabilityCategoriesInput
  CurrentYearTrends: DoorCreateCurrentYearTrendsInput
  LydAvailableFinishIds: DoorCreateLydAvailableFinishIdsInput
  DoorCollection: DoorCollectionCreateOneWithoutDoorsInput
  DoorLine: DoorLineCreateOneWithoutDoorsInput
  DefaultFrameProfile: FrameProfilesCreateOneInput
  StyleShape: StyleShapeCreateOneWithoutDoorsInput
  StyleLayoutPairs: StyleLayoutPairsCreateOneWithoutDoorsInput
  Sidelites: SidelitesCreateManyWithoutDoorsInput
}

input DoorCreateWithoutSidelitesInput {
  Id: ID
  Brand: String!
  StyleNumber: String!
  ProductLine: String
  DoorType: String
  ParentGlassFamilyAbbreviation: String
  GlassFamilyAbbreviation: String
  LiteQuantity: Int
  DefaultSize: String
  VisualizedHeight: Int
  VisualizedWidth: Int
  LaunchYear: Int
  RecentlyLaunched: Boolean
  GlassSizeCategory: String
  DefaultSidelite: String
  DefaultTransom: String
  DefaultGlassWidth: String
  AbstractPrice: Int
  SOSPrice: Float
  MDSPrice: Float
  LowesStocked: Boolean
  GlassType: String
  GlassDesign: String
  DefaultImageName: String
  ImageUrl: String
  Ordinal: Int
  GlassAssociation: String
  IsLimitedAvailability: Boolean
  ProductTrends: String
  DefaultDoorSurroundStyleNumber: String
  GrainProfile: String
  LydDisplay: Boolean
  LydDefaultFinishId: String
  LydGlassCategory: String
  LydDisplayOrder: Int
  LydDisplayCaming: String
  FacetMaterial: String
  FacetRecentlyLaunched: String
  RelatedStyleID: String
  AllowsHandlesets: Boolean
  IsFlushGlazed: Boolean
  ArchitecturalStyle: DoorCreateArchitecturalStyleInput
  LocationOnHouse: DoorCreateLocationOnHouseInput
  AvailableSizeDetails: DoorCreateAvailableSizeDetailsInput
  AvailableSizes: DoorCreateAvailableSizesInput
  StyleGroups: DoorCreateStyleGroupsInput
  RatingEligibility: DoorCreateRatingEligibilityInput
  SupportedAccessories: DoorCreateSupportedAccessoriesInput
  AllowedSidelites: DoorCreateAllowedSidelitesInput
  AllowedTransoms: DoorCreateAllowedTransomsInput
  GlassFeatures: DoorCreateGlassFeaturesInput
  LimitedAvailabilityCategories: DoorCreateLimitedAvailabilityCategoriesInput
  CurrentYearTrends: DoorCreateCurrentYearTrendsInput
  LydAvailableFinishIds: DoorCreateLydAvailableFinishIdsInput
  DoorCollection: DoorCollectionCreateOneWithoutDoorsInput
  DoorLine: DoorLineCreateOneWithoutDoorsInput
  FrameProfiles: FrameProfilesCreateManyWithoutDoorsInput
  DefaultFrameProfile: FrameProfilesCreateOneInput
  StyleShape: StyleShapeCreateOneWithoutDoorsInput
  StyleLayoutPairs: StyleLayoutPairsCreateOneWithoutDoorsInput
}

input DoorCreateWithoutStyleLayoutPairsInput {
  Id: ID
  Brand: String!
  StyleNumber: String!
  ProductLine: String
  DoorType: String
  ParentGlassFamilyAbbreviation: String
  GlassFamilyAbbreviation: String
  LiteQuantity: Int
  DefaultSize: String
  VisualizedHeight: Int
  VisualizedWidth: Int
  LaunchYear: Int
  RecentlyLaunched: Boolean
  GlassSizeCategory: String
  DefaultSidelite: String
  DefaultTransom: String
  DefaultGlassWidth: String
  AbstractPrice: Int
  SOSPrice: Float
  MDSPrice: Float
  LowesStocked: Boolean
  GlassType: String
  GlassDesign: String
  DefaultImageName: String
  ImageUrl: String
  Ordinal: Int
  GlassAssociation: String
  IsLimitedAvailability: Boolean
  ProductTrends: String
  DefaultDoorSurroundStyleNumber: String
  GrainProfile: String
  LydDisplay: Boolean
  LydDefaultFinishId: String
  LydGlassCategory: String
  LydDisplayOrder: Int
  LydDisplayCaming: String
  FacetMaterial: String
  FacetRecentlyLaunched: String
  RelatedStyleID: String
  AllowsHandlesets: Boolean
  IsFlushGlazed: Boolean
  ArchitecturalStyle: DoorCreateArchitecturalStyleInput
  LocationOnHouse: DoorCreateLocationOnHouseInput
  AvailableSizeDetails: DoorCreateAvailableSizeDetailsInput
  AvailableSizes: DoorCreateAvailableSizesInput
  StyleGroups: DoorCreateStyleGroupsInput
  RatingEligibility: DoorCreateRatingEligibilityInput
  SupportedAccessories: DoorCreateSupportedAccessoriesInput
  AllowedSidelites: DoorCreateAllowedSidelitesInput
  AllowedTransoms: DoorCreateAllowedTransomsInput
  GlassFeatures: DoorCreateGlassFeaturesInput
  LimitedAvailabilityCategories: DoorCreateLimitedAvailabilityCategoriesInput
  CurrentYearTrends: DoorCreateCurrentYearTrendsInput
  LydAvailableFinishIds: DoorCreateLydAvailableFinishIdsInput
  DoorCollection: DoorCollectionCreateOneWithoutDoorsInput
  DoorLine: DoorLineCreateOneWithoutDoorsInput
  FrameProfiles: FrameProfilesCreateManyWithoutDoorsInput
  DefaultFrameProfile: FrameProfilesCreateOneInput
  StyleShape: StyleShapeCreateOneWithoutDoorsInput
  Sidelites: SidelitesCreateManyWithoutDoorsInput
}

input DoorCreateWithoutStyleShapeInput {
  Id: ID
  Brand: String!
  StyleNumber: String!
  ProductLine: String
  DoorType: String
  ParentGlassFamilyAbbreviation: String
  GlassFamilyAbbreviation: String
  LiteQuantity: Int
  DefaultSize: String
  VisualizedHeight: Int
  VisualizedWidth: Int
  LaunchYear: Int
  RecentlyLaunched: Boolean
  GlassSizeCategory: String
  DefaultSidelite: String
  DefaultTransom: String
  DefaultGlassWidth: String
  AbstractPrice: Int
  SOSPrice: Float
  MDSPrice: Float
  LowesStocked: Boolean
  GlassType: String
  GlassDesign: String
  DefaultImageName: String
  ImageUrl: String
  Ordinal: Int
  GlassAssociation: String
  IsLimitedAvailability: Boolean
  ProductTrends: String
  DefaultDoorSurroundStyleNumber: String
  GrainProfile: String
  LydDisplay: Boolean
  LydDefaultFinishId: String
  LydGlassCategory: String
  LydDisplayOrder: Int
  LydDisplayCaming: String
  FacetMaterial: String
  FacetRecentlyLaunched: String
  RelatedStyleID: String
  AllowsHandlesets: Boolean
  IsFlushGlazed: Boolean
  ArchitecturalStyle: DoorCreateArchitecturalStyleInput
  LocationOnHouse: DoorCreateLocationOnHouseInput
  AvailableSizeDetails: DoorCreateAvailableSizeDetailsInput
  AvailableSizes: DoorCreateAvailableSizesInput
  StyleGroups: DoorCreateStyleGroupsInput
  RatingEligibility: DoorCreateRatingEligibilityInput
  SupportedAccessories: DoorCreateSupportedAccessoriesInput
  AllowedSidelites: DoorCreateAllowedSidelitesInput
  AllowedTransoms: DoorCreateAllowedTransomsInput
  GlassFeatures: DoorCreateGlassFeaturesInput
  LimitedAvailabilityCategories: DoorCreateLimitedAvailabilityCategoriesInput
  CurrentYearTrends: DoorCreateCurrentYearTrendsInput
  LydAvailableFinishIds: DoorCreateLydAvailableFinishIdsInput
  DoorCollection: DoorCollectionCreateOneWithoutDoorsInput
  DoorLine: DoorLineCreateOneWithoutDoorsInput
  FrameProfiles: FrameProfilesCreateManyWithoutDoorsInput
  DefaultFrameProfile: FrameProfilesCreateOneInput
  StyleLayoutPairs: StyleLayoutPairsCreateOneWithoutDoorsInput
  Sidelites: SidelitesCreateManyWithoutDoorsInput
}

"""An edge in a connection."""
type DoorEdge {
  """The item at the end of the edge."""
  node: Door!

  """A cursor for use in pagination."""
  cursor: String!
}

type DoorLine {
  Id: ID!
  Brand: String
  Name: String
  ShortName: String
  Abbreviation: String!
  ProductLineId: String
  DetailUrl: String
  SuppressCollectionName: Boolean
  Doors(where: DoorWhereInput, orderBy: DoorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Door!]
}

"""A connection to a list of items."""
type DoorLineConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [DoorLineEdge]!
  aggregate: AggregateDoorLine!
}

input DoorLineCreateInput {
  Id: ID
  Brand: String
  Name: String
  ShortName: String
  Abbreviation: String!
  ProductLineId: String
  DetailUrl: String
  SuppressCollectionName: Boolean
  Doors: DoorCreateManyWithoutDoorLineInput
}

input DoorLineCreateOneWithoutDoorsInput {
  create: DoorLineCreateWithoutDoorsInput
  connect: DoorLineWhereUniqueInput
}

input DoorLineCreateWithoutDoorsInput {
  Id: ID
  Brand: String
  Name: String
  ShortName: String
  Abbreviation: String!
  ProductLineId: String
  DetailUrl: String
  SuppressCollectionName: Boolean
}

"""An edge in a connection."""
type DoorLineEdge {
  """The item at the end of the edge."""
  node: DoorLine!

  """A cursor for use in pagination."""
  cursor: String!
}

enum DoorLineOrderByInput {
  Id_ASC
  Id_DESC
  Brand_ASC
  Brand_DESC
  Name_ASC
  Name_DESC
  ShortName_ASC
  ShortName_DESC
  Abbreviation_ASC
  Abbreviation_DESC
  ProductLineId_ASC
  ProductLineId_DESC
  DetailUrl_ASC
  DetailUrl_DESC
  SuppressCollectionName_ASC
  SuppressCollectionName_DESC
}

type DoorLinePreviousValues {
  Id: ID!
  Brand: String
  Name: String
  ShortName: String
  Abbreviation: String!
  ProductLineId: String
  DetailUrl: String
  SuppressCollectionName: Boolean
}

type DoorLineSubscriptionPayload {
  mutation: MutationType!
  node: DoorLine
  updatedFields: [String!]
  previousValues: DoorLinePreviousValues
}

input DoorLineSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [DoorLineSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [DoorLineSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DoorLineSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: DoorLineWhereInput
}

input DoorLineUpdateInput {
  Brand: String
  Name: String
  ShortName: String
  Abbreviation: String
  ProductLineId: String
  DetailUrl: String
  SuppressCollectionName: Boolean
  Doors: DoorUpdateManyWithoutDoorLineInput
}

input DoorLineUpdateManyMutationInput {
  Brand: String
  Name: String
  ShortName: String
  Abbreviation: String
  ProductLineId: String
  DetailUrl: String
  SuppressCollectionName: Boolean
}

input DoorLineUpdateOneWithoutDoorsInput {
  create: DoorLineCreateWithoutDoorsInput
  connect: DoorLineWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: DoorLineUpdateWithoutDoorsDataInput
  upsert: DoorLineUpsertWithoutDoorsInput
}

input DoorLineUpdateWithoutDoorsDataInput {
  Brand: String
  Name: String
  ShortName: String
  Abbreviation: String
  ProductLineId: String
  DetailUrl: String
  SuppressCollectionName: Boolean
}

input DoorLineUpsertWithoutDoorsInput {
  update: DoorLineUpdateWithoutDoorsDataInput!
  create: DoorLineCreateWithoutDoorsInput!
}

input DoorLineWhereInput {
  """Logical AND on all given filters."""
  AND: [DoorLineWhereInput!]

  """Logical OR on all given filters."""
  OR: [DoorLineWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DoorLineWhereInput!]
  Id: ID

  """All values that are not equal to given value."""
  Id_not: ID

  """All values that are contained in given list."""
  Id_in: [ID!]

  """All values that are not contained in given list."""
  Id_not_in: [ID!]

  """All values less than the given value."""
  Id_lt: ID

  """All values less than or equal the given value."""
  Id_lte: ID

  """All values greater than the given value."""
  Id_gt: ID

  """All values greater than or equal the given value."""
  Id_gte: ID

  """All values containing the given string."""
  Id_contains: ID

  """All values not containing the given string."""
  Id_not_contains: ID

  """All values starting with the given string."""
  Id_starts_with: ID

  """All values not starting with the given string."""
  Id_not_starts_with: ID

  """All values ending with the given string."""
  Id_ends_with: ID

  """All values not ending with the given string."""
  Id_not_ends_with: ID
  Brand: String

  """All values that are not equal to given value."""
  Brand_not: String

  """All values that are contained in given list."""
  Brand_in: [String!]

  """All values that are not contained in given list."""
  Brand_not_in: [String!]

  """All values less than the given value."""
  Brand_lt: String

  """All values less than or equal the given value."""
  Brand_lte: String

  """All values greater than the given value."""
  Brand_gt: String

  """All values greater than or equal the given value."""
  Brand_gte: String

  """All values containing the given string."""
  Brand_contains: String

  """All values not containing the given string."""
  Brand_not_contains: String

  """All values starting with the given string."""
  Brand_starts_with: String

  """All values not starting with the given string."""
  Brand_not_starts_with: String

  """All values ending with the given string."""
  Brand_ends_with: String

  """All values not ending with the given string."""
  Brand_not_ends_with: String
  Name: String

  """All values that are not equal to given value."""
  Name_not: String

  """All values that are contained in given list."""
  Name_in: [String!]

  """All values that are not contained in given list."""
  Name_not_in: [String!]

  """All values less than the given value."""
  Name_lt: String

  """All values less than or equal the given value."""
  Name_lte: String

  """All values greater than the given value."""
  Name_gt: String

  """All values greater than or equal the given value."""
  Name_gte: String

  """All values containing the given string."""
  Name_contains: String

  """All values not containing the given string."""
  Name_not_contains: String

  """All values starting with the given string."""
  Name_starts_with: String

  """All values not starting with the given string."""
  Name_not_starts_with: String

  """All values ending with the given string."""
  Name_ends_with: String

  """All values not ending with the given string."""
  Name_not_ends_with: String
  ShortName: String

  """All values that are not equal to given value."""
  ShortName_not: String

  """All values that are contained in given list."""
  ShortName_in: [String!]

  """All values that are not contained in given list."""
  ShortName_not_in: [String!]

  """All values less than the given value."""
  ShortName_lt: String

  """All values less than or equal the given value."""
  ShortName_lte: String

  """All values greater than the given value."""
  ShortName_gt: String

  """All values greater than or equal the given value."""
  ShortName_gte: String

  """All values containing the given string."""
  ShortName_contains: String

  """All values not containing the given string."""
  ShortName_not_contains: String

  """All values starting with the given string."""
  ShortName_starts_with: String

  """All values not starting with the given string."""
  ShortName_not_starts_with: String

  """All values ending with the given string."""
  ShortName_ends_with: String

  """All values not ending with the given string."""
  ShortName_not_ends_with: String
  Abbreviation: String

  """All values that are not equal to given value."""
  Abbreviation_not: String

  """All values that are contained in given list."""
  Abbreviation_in: [String!]

  """All values that are not contained in given list."""
  Abbreviation_not_in: [String!]

  """All values less than the given value."""
  Abbreviation_lt: String

  """All values less than or equal the given value."""
  Abbreviation_lte: String

  """All values greater than the given value."""
  Abbreviation_gt: String

  """All values greater than or equal the given value."""
  Abbreviation_gte: String

  """All values containing the given string."""
  Abbreviation_contains: String

  """All values not containing the given string."""
  Abbreviation_not_contains: String

  """All values starting with the given string."""
  Abbreviation_starts_with: String

  """All values not starting with the given string."""
  Abbreviation_not_starts_with: String

  """All values ending with the given string."""
  Abbreviation_ends_with: String

  """All values not ending with the given string."""
  Abbreviation_not_ends_with: String
  ProductLineId: String

  """All values that are not equal to given value."""
  ProductLineId_not: String

  """All values that are contained in given list."""
  ProductLineId_in: [String!]

  """All values that are not contained in given list."""
  ProductLineId_not_in: [String!]

  """All values less than the given value."""
  ProductLineId_lt: String

  """All values less than or equal the given value."""
  ProductLineId_lte: String

  """All values greater than the given value."""
  ProductLineId_gt: String

  """All values greater than or equal the given value."""
  ProductLineId_gte: String

  """All values containing the given string."""
  ProductLineId_contains: String

  """All values not containing the given string."""
  ProductLineId_not_contains: String

  """All values starting with the given string."""
  ProductLineId_starts_with: String

  """All values not starting with the given string."""
  ProductLineId_not_starts_with: String

  """All values ending with the given string."""
  ProductLineId_ends_with: String

  """All values not ending with the given string."""
  ProductLineId_not_ends_with: String
  DetailUrl: String

  """All values that are not equal to given value."""
  DetailUrl_not: String

  """All values that are contained in given list."""
  DetailUrl_in: [String!]

  """All values that are not contained in given list."""
  DetailUrl_not_in: [String!]

  """All values less than the given value."""
  DetailUrl_lt: String

  """All values less than or equal the given value."""
  DetailUrl_lte: String

  """All values greater than the given value."""
  DetailUrl_gt: String

  """All values greater than or equal the given value."""
  DetailUrl_gte: String

  """All values containing the given string."""
  DetailUrl_contains: String

  """All values not containing the given string."""
  DetailUrl_not_contains: String

  """All values starting with the given string."""
  DetailUrl_starts_with: String

  """All values not starting with the given string."""
  DetailUrl_not_starts_with: String

  """All values ending with the given string."""
  DetailUrl_ends_with: String

  """All values not ending with the given string."""
  DetailUrl_not_ends_with: String
  SuppressCollectionName: Boolean

  """All values that are not equal to given value."""
  SuppressCollectionName_not: Boolean
  Doors_every: DoorWhereInput
  Doors_some: DoorWhereInput
  Doors_none: DoorWhereInput
}

input DoorLineWhereUniqueInput {
  Id: ID
  Abbreviation: String
}

enum DoorOrderByInput {
  Id_ASC
  Id_DESC
  Brand_ASC
  Brand_DESC
  StyleNumber_ASC
  StyleNumber_DESC
  ProductLine_ASC
  ProductLine_DESC
  DoorType_ASC
  DoorType_DESC
  ParentGlassFamilyAbbreviation_ASC
  ParentGlassFamilyAbbreviation_DESC
  GlassFamilyAbbreviation_ASC
  GlassFamilyAbbreviation_DESC
  LiteQuantity_ASC
  LiteQuantity_DESC
  DefaultSize_ASC
  DefaultSize_DESC
  VisualizedHeight_ASC
  VisualizedHeight_DESC
  VisualizedWidth_ASC
  VisualizedWidth_DESC
  LaunchYear_ASC
  LaunchYear_DESC
  RecentlyLaunched_ASC
  RecentlyLaunched_DESC
  GlassSizeCategory_ASC
  GlassSizeCategory_DESC
  DefaultSidelite_ASC
  DefaultSidelite_DESC
  DefaultTransom_ASC
  DefaultTransom_DESC
  DefaultGlassWidth_ASC
  DefaultGlassWidth_DESC
  AbstractPrice_ASC
  AbstractPrice_DESC
  SOSPrice_ASC
  SOSPrice_DESC
  MDSPrice_ASC
  MDSPrice_DESC
  LowesStocked_ASC
  LowesStocked_DESC
  GlassType_ASC
  GlassType_DESC
  GlassDesign_ASC
  GlassDesign_DESC
  DefaultImageName_ASC
  DefaultImageName_DESC
  ImageUrl_ASC
  ImageUrl_DESC
  Ordinal_ASC
  Ordinal_DESC
  GlassAssociation_ASC
  GlassAssociation_DESC
  IsLimitedAvailability_ASC
  IsLimitedAvailability_DESC
  ProductTrends_ASC
  ProductTrends_DESC
  DefaultDoorSurroundStyleNumber_ASC
  DefaultDoorSurroundStyleNumber_DESC
  GrainProfile_ASC
  GrainProfile_DESC
  LydDisplay_ASC
  LydDisplay_DESC
  LydDefaultFinishId_ASC
  LydDefaultFinishId_DESC
  LydGlassCategory_ASC
  LydGlassCategory_DESC
  LydDisplayOrder_ASC
  LydDisplayOrder_DESC
  LydDisplayCaming_ASC
  LydDisplayCaming_DESC
  FacetMaterial_ASC
  FacetMaterial_DESC
  FacetRecentlyLaunched_ASC
  FacetRecentlyLaunched_DESC
  RelatedStyleID_ASC
  RelatedStyleID_DESC
  AllowsHandlesets_ASC
  AllowsHandlesets_DESC
  IsFlushGlazed_ASC
  IsFlushGlazed_DESC
}

type DoorPreviousValues {
  Id: ID!
  Brand: String!
  StyleNumber: String!
  ArchitecturalStyle: [String!]!
  ProductLine: String
  DoorType: String
  ParentGlassFamilyAbbreviation: String
  GlassFamilyAbbreviation: String
  LiteQuantity: Int
  LocationOnHouse: [String!]!
  AvailableSizeDetails: [String!]!
  AvailableSizes: [String!]!
  DefaultSize: String
  VisualizedHeight: Int
  VisualizedWidth: Int
  StyleGroups: [String!]!
  RatingEligibility: [String!]!
  LaunchYear: Int
  RecentlyLaunched: Boolean
  GlassSizeCategory: String
  SupportedAccessories: [String!]!
  AllowedSidelites: [String!]!
  AllowedTransoms: [String!]!
  DefaultSidelite: String
  DefaultTransom: String
  DefaultGlassWidth: String
  AbstractPrice: Int
  SOSPrice: Float
  MDSPrice: Float
  LowesStocked: Boolean
  GlassType: String
  GlassDesign: String
  GlassFeatures: [String!]!
  DefaultImageName: String
  ImageUrl: String
  Ordinal: Int
  GlassAssociation: String
  IsLimitedAvailability: Boolean
  LimitedAvailabilityCategories: [String!]!
  ProductTrends: String
  DefaultDoorSurroundStyleNumber: String
  GrainProfile: String
  CurrentYearTrends: [String!]!
  LydDisplay: Boolean
  LydDefaultFinishId: String
  LydAvailableFinishIds: [String!]!
  LydGlassCategory: String
  LydDisplayOrder: Int
  LydDisplayCaming: String
  FacetMaterial: String
  FacetRecentlyLaunched: String
  RelatedStyleID: String
  AllowsHandlesets: Boolean
  IsFlushGlazed: Boolean
}

input DoorScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [DoorScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [DoorScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DoorScalarWhereInput!]
  Id: ID

  """All values that are not equal to given value."""
  Id_not: ID

  """All values that are contained in given list."""
  Id_in: [ID!]

  """All values that are not contained in given list."""
  Id_not_in: [ID!]

  """All values less than the given value."""
  Id_lt: ID

  """All values less than or equal the given value."""
  Id_lte: ID

  """All values greater than the given value."""
  Id_gt: ID

  """All values greater than or equal the given value."""
  Id_gte: ID

  """All values containing the given string."""
  Id_contains: ID

  """All values not containing the given string."""
  Id_not_contains: ID

  """All values starting with the given string."""
  Id_starts_with: ID

  """All values not starting with the given string."""
  Id_not_starts_with: ID

  """All values ending with the given string."""
  Id_ends_with: ID

  """All values not ending with the given string."""
  Id_not_ends_with: ID
  Brand: String

  """All values that are not equal to given value."""
  Brand_not: String

  """All values that are contained in given list."""
  Brand_in: [String!]

  """All values that are not contained in given list."""
  Brand_not_in: [String!]

  """All values less than the given value."""
  Brand_lt: String

  """All values less than or equal the given value."""
  Brand_lte: String

  """All values greater than the given value."""
  Brand_gt: String

  """All values greater than or equal the given value."""
  Brand_gte: String

  """All values containing the given string."""
  Brand_contains: String

  """All values not containing the given string."""
  Brand_not_contains: String

  """All values starting with the given string."""
  Brand_starts_with: String

  """All values not starting with the given string."""
  Brand_not_starts_with: String

  """All values ending with the given string."""
  Brand_ends_with: String

  """All values not ending with the given string."""
  Brand_not_ends_with: String
  StyleNumber: String

  """All values that are not equal to given value."""
  StyleNumber_not: String

  """All values that are contained in given list."""
  StyleNumber_in: [String!]

  """All values that are not contained in given list."""
  StyleNumber_not_in: [String!]

  """All values less than the given value."""
  StyleNumber_lt: String

  """All values less than or equal the given value."""
  StyleNumber_lte: String

  """All values greater than the given value."""
  StyleNumber_gt: String

  """All values greater than or equal the given value."""
  StyleNumber_gte: String

  """All values containing the given string."""
  StyleNumber_contains: String

  """All values not containing the given string."""
  StyleNumber_not_contains: String

  """All values starting with the given string."""
  StyleNumber_starts_with: String

  """All values not starting with the given string."""
  StyleNumber_not_starts_with: String

  """All values ending with the given string."""
  StyleNumber_ends_with: String

  """All values not ending with the given string."""
  StyleNumber_not_ends_with: String
  ProductLine: String

  """All values that are not equal to given value."""
  ProductLine_not: String

  """All values that are contained in given list."""
  ProductLine_in: [String!]

  """All values that are not contained in given list."""
  ProductLine_not_in: [String!]

  """All values less than the given value."""
  ProductLine_lt: String

  """All values less than or equal the given value."""
  ProductLine_lte: String

  """All values greater than the given value."""
  ProductLine_gt: String

  """All values greater than or equal the given value."""
  ProductLine_gte: String

  """All values containing the given string."""
  ProductLine_contains: String

  """All values not containing the given string."""
  ProductLine_not_contains: String

  """All values starting with the given string."""
  ProductLine_starts_with: String

  """All values not starting with the given string."""
  ProductLine_not_starts_with: String

  """All values ending with the given string."""
  ProductLine_ends_with: String

  """All values not ending with the given string."""
  ProductLine_not_ends_with: String
  DoorType: String

  """All values that are not equal to given value."""
  DoorType_not: String

  """All values that are contained in given list."""
  DoorType_in: [String!]

  """All values that are not contained in given list."""
  DoorType_not_in: [String!]

  """All values less than the given value."""
  DoorType_lt: String

  """All values less than or equal the given value."""
  DoorType_lte: String

  """All values greater than the given value."""
  DoorType_gt: String

  """All values greater than or equal the given value."""
  DoorType_gte: String

  """All values containing the given string."""
  DoorType_contains: String

  """All values not containing the given string."""
  DoorType_not_contains: String

  """All values starting with the given string."""
  DoorType_starts_with: String

  """All values not starting with the given string."""
  DoorType_not_starts_with: String

  """All values ending with the given string."""
  DoorType_ends_with: String

  """All values not ending with the given string."""
  DoorType_not_ends_with: String
  ParentGlassFamilyAbbreviation: String

  """All values that are not equal to given value."""
  ParentGlassFamilyAbbreviation_not: String

  """All values that are contained in given list."""
  ParentGlassFamilyAbbreviation_in: [String!]

  """All values that are not contained in given list."""
  ParentGlassFamilyAbbreviation_not_in: [String!]

  """All values less than the given value."""
  ParentGlassFamilyAbbreviation_lt: String

  """All values less than or equal the given value."""
  ParentGlassFamilyAbbreviation_lte: String

  """All values greater than the given value."""
  ParentGlassFamilyAbbreviation_gt: String

  """All values greater than or equal the given value."""
  ParentGlassFamilyAbbreviation_gte: String

  """All values containing the given string."""
  ParentGlassFamilyAbbreviation_contains: String

  """All values not containing the given string."""
  ParentGlassFamilyAbbreviation_not_contains: String

  """All values starting with the given string."""
  ParentGlassFamilyAbbreviation_starts_with: String

  """All values not starting with the given string."""
  ParentGlassFamilyAbbreviation_not_starts_with: String

  """All values ending with the given string."""
  ParentGlassFamilyAbbreviation_ends_with: String

  """All values not ending with the given string."""
  ParentGlassFamilyAbbreviation_not_ends_with: String
  GlassFamilyAbbreviation: String

  """All values that are not equal to given value."""
  GlassFamilyAbbreviation_not: String

  """All values that are contained in given list."""
  GlassFamilyAbbreviation_in: [String!]

  """All values that are not contained in given list."""
  GlassFamilyAbbreviation_not_in: [String!]

  """All values less than the given value."""
  GlassFamilyAbbreviation_lt: String

  """All values less than or equal the given value."""
  GlassFamilyAbbreviation_lte: String

  """All values greater than the given value."""
  GlassFamilyAbbreviation_gt: String

  """All values greater than or equal the given value."""
  GlassFamilyAbbreviation_gte: String

  """All values containing the given string."""
  GlassFamilyAbbreviation_contains: String

  """All values not containing the given string."""
  GlassFamilyAbbreviation_not_contains: String

  """All values starting with the given string."""
  GlassFamilyAbbreviation_starts_with: String

  """All values not starting with the given string."""
  GlassFamilyAbbreviation_not_starts_with: String

  """All values ending with the given string."""
  GlassFamilyAbbreviation_ends_with: String

  """All values not ending with the given string."""
  GlassFamilyAbbreviation_not_ends_with: String
  LiteQuantity: Int

  """All values that are not equal to given value."""
  LiteQuantity_not: Int

  """All values that are contained in given list."""
  LiteQuantity_in: [Int!]

  """All values that are not contained in given list."""
  LiteQuantity_not_in: [Int!]

  """All values less than the given value."""
  LiteQuantity_lt: Int

  """All values less than or equal the given value."""
  LiteQuantity_lte: Int

  """All values greater than the given value."""
  LiteQuantity_gt: Int

  """All values greater than or equal the given value."""
  LiteQuantity_gte: Int
  DefaultSize: String

  """All values that are not equal to given value."""
  DefaultSize_not: String

  """All values that are contained in given list."""
  DefaultSize_in: [String!]

  """All values that are not contained in given list."""
  DefaultSize_not_in: [String!]

  """All values less than the given value."""
  DefaultSize_lt: String

  """All values less than or equal the given value."""
  DefaultSize_lte: String

  """All values greater than the given value."""
  DefaultSize_gt: String

  """All values greater than or equal the given value."""
  DefaultSize_gte: String

  """All values containing the given string."""
  DefaultSize_contains: String

  """All values not containing the given string."""
  DefaultSize_not_contains: String

  """All values starting with the given string."""
  DefaultSize_starts_with: String

  """All values not starting with the given string."""
  DefaultSize_not_starts_with: String

  """All values ending with the given string."""
  DefaultSize_ends_with: String

  """All values not ending with the given string."""
  DefaultSize_not_ends_with: String
  VisualizedHeight: Int

  """All values that are not equal to given value."""
  VisualizedHeight_not: Int

  """All values that are contained in given list."""
  VisualizedHeight_in: [Int!]

  """All values that are not contained in given list."""
  VisualizedHeight_not_in: [Int!]

  """All values less than the given value."""
  VisualizedHeight_lt: Int

  """All values less than or equal the given value."""
  VisualizedHeight_lte: Int

  """All values greater than the given value."""
  VisualizedHeight_gt: Int

  """All values greater than or equal the given value."""
  VisualizedHeight_gte: Int
  VisualizedWidth: Int

  """All values that are not equal to given value."""
  VisualizedWidth_not: Int

  """All values that are contained in given list."""
  VisualizedWidth_in: [Int!]

  """All values that are not contained in given list."""
  VisualizedWidth_not_in: [Int!]

  """All values less than the given value."""
  VisualizedWidth_lt: Int

  """All values less than or equal the given value."""
  VisualizedWidth_lte: Int

  """All values greater than the given value."""
  VisualizedWidth_gt: Int

  """All values greater than or equal the given value."""
  VisualizedWidth_gte: Int
  LaunchYear: Int

  """All values that are not equal to given value."""
  LaunchYear_not: Int

  """All values that are contained in given list."""
  LaunchYear_in: [Int!]

  """All values that are not contained in given list."""
  LaunchYear_not_in: [Int!]

  """All values less than the given value."""
  LaunchYear_lt: Int

  """All values less than or equal the given value."""
  LaunchYear_lte: Int

  """All values greater than the given value."""
  LaunchYear_gt: Int

  """All values greater than or equal the given value."""
  LaunchYear_gte: Int
  RecentlyLaunched: Boolean

  """All values that are not equal to given value."""
  RecentlyLaunched_not: Boolean
  GlassSizeCategory: String

  """All values that are not equal to given value."""
  GlassSizeCategory_not: String

  """All values that are contained in given list."""
  GlassSizeCategory_in: [String!]

  """All values that are not contained in given list."""
  GlassSizeCategory_not_in: [String!]

  """All values less than the given value."""
  GlassSizeCategory_lt: String

  """All values less than or equal the given value."""
  GlassSizeCategory_lte: String

  """All values greater than the given value."""
  GlassSizeCategory_gt: String

  """All values greater than or equal the given value."""
  GlassSizeCategory_gte: String

  """All values containing the given string."""
  GlassSizeCategory_contains: String

  """All values not containing the given string."""
  GlassSizeCategory_not_contains: String

  """All values starting with the given string."""
  GlassSizeCategory_starts_with: String

  """All values not starting with the given string."""
  GlassSizeCategory_not_starts_with: String

  """All values ending with the given string."""
  GlassSizeCategory_ends_with: String

  """All values not ending with the given string."""
  GlassSizeCategory_not_ends_with: String
  DefaultSidelite: String

  """All values that are not equal to given value."""
  DefaultSidelite_not: String

  """All values that are contained in given list."""
  DefaultSidelite_in: [String!]

  """All values that are not contained in given list."""
  DefaultSidelite_not_in: [String!]

  """All values less than the given value."""
  DefaultSidelite_lt: String

  """All values less than or equal the given value."""
  DefaultSidelite_lte: String

  """All values greater than the given value."""
  DefaultSidelite_gt: String

  """All values greater than or equal the given value."""
  DefaultSidelite_gte: String

  """All values containing the given string."""
  DefaultSidelite_contains: String

  """All values not containing the given string."""
  DefaultSidelite_not_contains: String

  """All values starting with the given string."""
  DefaultSidelite_starts_with: String

  """All values not starting with the given string."""
  DefaultSidelite_not_starts_with: String

  """All values ending with the given string."""
  DefaultSidelite_ends_with: String

  """All values not ending with the given string."""
  DefaultSidelite_not_ends_with: String
  DefaultTransom: String

  """All values that are not equal to given value."""
  DefaultTransom_not: String

  """All values that are contained in given list."""
  DefaultTransom_in: [String!]

  """All values that are not contained in given list."""
  DefaultTransom_not_in: [String!]

  """All values less than the given value."""
  DefaultTransom_lt: String

  """All values less than or equal the given value."""
  DefaultTransom_lte: String

  """All values greater than the given value."""
  DefaultTransom_gt: String

  """All values greater than or equal the given value."""
  DefaultTransom_gte: String

  """All values containing the given string."""
  DefaultTransom_contains: String

  """All values not containing the given string."""
  DefaultTransom_not_contains: String

  """All values starting with the given string."""
  DefaultTransom_starts_with: String

  """All values not starting with the given string."""
  DefaultTransom_not_starts_with: String

  """All values ending with the given string."""
  DefaultTransom_ends_with: String

  """All values not ending with the given string."""
  DefaultTransom_not_ends_with: String
  DefaultGlassWidth: String

  """All values that are not equal to given value."""
  DefaultGlassWidth_not: String

  """All values that are contained in given list."""
  DefaultGlassWidth_in: [String!]

  """All values that are not contained in given list."""
  DefaultGlassWidth_not_in: [String!]

  """All values less than the given value."""
  DefaultGlassWidth_lt: String

  """All values less than or equal the given value."""
  DefaultGlassWidth_lte: String

  """All values greater than the given value."""
  DefaultGlassWidth_gt: String

  """All values greater than or equal the given value."""
  DefaultGlassWidth_gte: String

  """All values containing the given string."""
  DefaultGlassWidth_contains: String

  """All values not containing the given string."""
  DefaultGlassWidth_not_contains: String

  """All values starting with the given string."""
  DefaultGlassWidth_starts_with: String

  """All values not starting with the given string."""
  DefaultGlassWidth_not_starts_with: String

  """All values ending with the given string."""
  DefaultGlassWidth_ends_with: String

  """All values not ending with the given string."""
  DefaultGlassWidth_not_ends_with: String
  AbstractPrice: Int

  """All values that are not equal to given value."""
  AbstractPrice_not: Int

  """All values that are contained in given list."""
  AbstractPrice_in: [Int!]

  """All values that are not contained in given list."""
  AbstractPrice_not_in: [Int!]

  """All values less than the given value."""
  AbstractPrice_lt: Int

  """All values less than or equal the given value."""
  AbstractPrice_lte: Int

  """All values greater than the given value."""
  AbstractPrice_gt: Int

  """All values greater than or equal the given value."""
  AbstractPrice_gte: Int
  SOSPrice: Float

  """All values that are not equal to given value."""
  SOSPrice_not: Float

  """All values that are contained in given list."""
  SOSPrice_in: [Float!]

  """All values that are not contained in given list."""
  SOSPrice_not_in: [Float!]

  """All values less than the given value."""
  SOSPrice_lt: Float

  """All values less than or equal the given value."""
  SOSPrice_lte: Float

  """All values greater than the given value."""
  SOSPrice_gt: Float

  """All values greater than or equal the given value."""
  SOSPrice_gte: Float
  MDSPrice: Float

  """All values that are not equal to given value."""
  MDSPrice_not: Float

  """All values that are contained in given list."""
  MDSPrice_in: [Float!]

  """All values that are not contained in given list."""
  MDSPrice_not_in: [Float!]

  """All values less than the given value."""
  MDSPrice_lt: Float

  """All values less than or equal the given value."""
  MDSPrice_lte: Float

  """All values greater than the given value."""
  MDSPrice_gt: Float

  """All values greater than or equal the given value."""
  MDSPrice_gte: Float
  LowesStocked: Boolean

  """All values that are not equal to given value."""
  LowesStocked_not: Boolean
  GlassType: String

  """All values that are not equal to given value."""
  GlassType_not: String

  """All values that are contained in given list."""
  GlassType_in: [String!]

  """All values that are not contained in given list."""
  GlassType_not_in: [String!]

  """All values less than the given value."""
  GlassType_lt: String

  """All values less than or equal the given value."""
  GlassType_lte: String

  """All values greater than the given value."""
  GlassType_gt: String

  """All values greater than or equal the given value."""
  GlassType_gte: String

  """All values containing the given string."""
  GlassType_contains: String

  """All values not containing the given string."""
  GlassType_not_contains: String

  """All values starting with the given string."""
  GlassType_starts_with: String

  """All values not starting with the given string."""
  GlassType_not_starts_with: String

  """All values ending with the given string."""
  GlassType_ends_with: String

  """All values not ending with the given string."""
  GlassType_not_ends_with: String
  GlassDesign: String

  """All values that are not equal to given value."""
  GlassDesign_not: String

  """All values that are contained in given list."""
  GlassDesign_in: [String!]

  """All values that are not contained in given list."""
  GlassDesign_not_in: [String!]

  """All values less than the given value."""
  GlassDesign_lt: String

  """All values less than or equal the given value."""
  GlassDesign_lte: String

  """All values greater than the given value."""
  GlassDesign_gt: String

  """All values greater than or equal the given value."""
  GlassDesign_gte: String

  """All values containing the given string."""
  GlassDesign_contains: String

  """All values not containing the given string."""
  GlassDesign_not_contains: String

  """All values starting with the given string."""
  GlassDesign_starts_with: String

  """All values not starting with the given string."""
  GlassDesign_not_starts_with: String

  """All values ending with the given string."""
  GlassDesign_ends_with: String

  """All values not ending with the given string."""
  GlassDesign_not_ends_with: String
  DefaultImageName: String

  """All values that are not equal to given value."""
  DefaultImageName_not: String

  """All values that are contained in given list."""
  DefaultImageName_in: [String!]

  """All values that are not contained in given list."""
  DefaultImageName_not_in: [String!]

  """All values less than the given value."""
  DefaultImageName_lt: String

  """All values less than or equal the given value."""
  DefaultImageName_lte: String

  """All values greater than the given value."""
  DefaultImageName_gt: String

  """All values greater than or equal the given value."""
  DefaultImageName_gte: String

  """All values containing the given string."""
  DefaultImageName_contains: String

  """All values not containing the given string."""
  DefaultImageName_not_contains: String

  """All values starting with the given string."""
  DefaultImageName_starts_with: String

  """All values not starting with the given string."""
  DefaultImageName_not_starts_with: String

  """All values ending with the given string."""
  DefaultImageName_ends_with: String

  """All values not ending with the given string."""
  DefaultImageName_not_ends_with: String
  ImageUrl: String

  """All values that are not equal to given value."""
  ImageUrl_not: String

  """All values that are contained in given list."""
  ImageUrl_in: [String!]

  """All values that are not contained in given list."""
  ImageUrl_not_in: [String!]

  """All values less than the given value."""
  ImageUrl_lt: String

  """All values less than or equal the given value."""
  ImageUrl_lte: String

  """All values greater than the given value."""
  ImageUrl_gt: String

  """All values greater than or equal the given value."""
  ImageUrl_gte: String

  """All values containing the given string."""
  ImageUrl_contains: String

  """All values not containing the given string."""
  ImageUrl_not_contains: String

  """All values starting with the given string."""
  ImageUrl_starts_with: String

  """All values not starting with the given string."""
  ImageUrl_not_starts_with: String

  """All values ending with the given string."""
  ImageUrl_ends_with: String

  """All values not ending with the given string."""
  ImageUrl_not_ends_with: String
  Ordinal: Int

  """All values that are not equal to given value."""
  Ordinal_not: Int

  """All values that are contained in given list."""
  Ordinal_in: [Int!]

  """All values that are not contained in given list."""
  Ordinal_not_in: [Int!]

  """All values less than the given value."""
  Ordinal_lt: Int

  """All values less than or equal the given value."""
  Ordinal_lte: Int

  """All values greater than the given value."""
  Ordinal_gt: Int

  """All values greater than or equal the given value."""
  Ordinal_gte: Int
  GlassAssociation: String

  """All values that are not equal to given value."""
  GlassAssociation_not: String

  """All values that are contained in given list."""
  GlassAssociation_in: [String!]

  """All values that are not contained in given list."""
  GlassAssociation_not_in: [String!]

  """All values less than the given value."""
  GlassAssociation_lt: String

  """All values less than or equal the given value."""
  GlassAssociation_lte: String

  """All values greater than the given value."""
  GlassAssociation_gt: String

  """All values greater than or equal the given value."""
  GlassAssociation_gte: String

  """All values containing the given string."""
  GlassAssociation_contains: String

  """All values not containing the given string."""
  GlassAssociation_not_contains: String

  """All values starting with the given string."""
  GlassAssociation_starts_with: String

  """All values not starting with the given string."""
  GlassAssociation_not_starts_with: String

  """All values ending with the given string."""
  GlassAssociation_ends_with: String

  """All values not ending with the given string."""
  GlassAssociation_not_ends_with: String
  IsLimitedAvailability: Boolean

  """All values that are not equal to given value."""
  IsLimitedAvailability_not: Boolean
  ProductTrends: String

  """All values that are not equal to given value."""
  ProductTrends_not: String

  """All values that are contained in given list."""
  ProductTrends_in: [String!]

  """All values that are not contained in given list."""
  ProductTrends_not_in: [String!]

  """All values less than the given value."""
  ProductTrends_lt: String

  """All values less than or equal the given value."""
  ProductTrends_lte: String

  """All values greater than the given value."""
  ProductTrends_gt: String

  """All values greater than or equal the given value."""
  ProductTrends_gte: String

  """All values containing the given string."""
  ProductTrends_contains: String

  """All values not containing the given string."""
  ProductTrends_not_contains: String

  """All values starting with the given string."""
  ProductTrends_starts_with: String

  """All values not starting with the given string."""
  ProductTrends_not_starts_with: String

  """All values ending with the given string."""
  ProductTrends_ends_with: String

  """All values not ending with the given string."""
  ProductTrends_not_ends_with: String
  DefaultDoorSurroundStyleNumber: String

  """All values that are not equal to given value."""
  DefaultDoorSurroundStyleNumber_not: String

  """All values that are contained in given list."""
  DefaultDoorSurroundStyleNumber_in: [String!]

  """All values that are not contained in given list."""
  DefaultDoorSurroundStyleNumber_not_in: [String!]

  """All values less than the given value."""
  DefaultDoorSurroundStyleNumber_lt: String

  """All values less than or equal the given value."""
  DefaultDoorSurroundStyleNumber_lte: String

  """All values greater than the given value."""
  DefaultDoorSurroundStyleNumber_gt: String

  """All values greater than or equal the given value."""
  DefaultDoorSurroundStyleNumber_gte: String

  """All values containing the given string."""
  DefaultDoorSurroundStyleNumber_contains: String

  """All values not containing the given string."""
  DefaultDoorSurroundStyleNumber_not_contains: String

  """All values starting with the given string."""
  DefaultDoorSurroundStyleNumber_starts_with: String

  """All values not starting with the given string."""
  DefaultDoorSurroundStyleNumber_not_starts_with: String

  """All values ending with the given string."""
  DefaultDoorSurroundStyleNumber_ends_with: String

  """All values not ending with the given string."""
  DefaultDoorSurroundStyleNumber_not_ends_with: String
  GrainProfile: String

  """All values that are not equal to given value."""
  GrainProfile_not: String

  """All values that are contained in given list."""
  GrainProfile_in: [String!]

  """All values that are not contained in given list."""
  GrainProfile_not_in: [String!]

  """All values less than the given value."""
  GrainProfile_lt: String

  """All values less than or equal the given value."""
  GrainProfile_lte: String

  """All values greater than the given value."""
  GrainProfile_gt: String

  """All values greater than or equal the given value."""
  GrainProfile_gte: String

  """All values containing the given string."""
  GrainProfile_contains: String

  """All values not containing the given string."""
  GrainProfile_not_contains: String

  """All values starting with the given string."""
  GrainProfile_starts_with: String

  """All values not starting with the given string."""
  GrainProfile_not_starts_with: String

  """All values ending with the given string."""
  GrainProfile_ends_with: String

  """All values not ending with the given string."""
  GrainProfile_not_ends_with: String
  LydDisplay: Boolean

  """All values that are not equal to given value."""
  LydDisplay_not: Boolean
  LydDefaultFinishId: String

  """All values that are not equal to given value."""
  LydDefaultFinishId_not: String

  """All values that are contained in given list."""
  LydDefaultFinishId_in: [String!]

  """All values that are not contained in given list."""
  LydDefaultFinishId_not_in: [String!]

  """All values less than the given value."""
  LydDefaultFinishId_lt: String

  """All values less than or equal the given value."""
  LydDefaultFinishId_lte: String

  """All values greater than the given value."""
  LydDefaultFinishId_gt: String

  """All values greater than or equal the given value."""
  LydDefaultFinishId_gte: String

  """All values containing the given string."""
  LydDefaultFinishId_contains: String

  """All values not containing the given string."""
  LydDefaultFinishId_not_contains: String

  """All values starting with the given string."""
  LydDefaultFinishId_starts_with: String

  """All values not starting with the given string."""
  LydDefaultFinishId_not_starts_with: String

  """All values ending with the given string."""
  LydDefaultFinishId_ends_with: String

  """All values not ending with the given string."""
  LydDefaultFinishId_not_ends_with: String
  LydGlassCategory: String

  """All values that are not equal to given value."""
  LydGlassCategory_not: String

  """All values that are contained in given list."""
  LydGlassCategory_in: [String!]

  """All values that are not contained in given list."""
  LydGlassCategory_not_in: [String!]

  """All values less than the given value."""
  LydGlassCategory_lt: String

  """All values less than or equal the given value."""
  LydGlassCategory_lte: String

  """All values greater than the given value."""
  LydGlassCategory_gt: String

  """All values greater than or equal the given value."""
  LydGlassCategory_gte: String

  """All values containing the given string."""
  LydGlassCategory_contains: String

  """All values not containing the given string."""
  LydGlassCategory_not_contains: String

  """All values starting with the given string."""
  LydGlassCategory_starts_with: String

  """All values not starting with the given string."""
  LydGlassCategory_not_starts_with: String

  """All values ending with the given string."""
  LydGlassCategory_ends_with: String

  """All values not ending with the given string."""
  LydGlassCategory_not_ends_with: String
  LydDisplayOrder: Int

  """All values that are not equal to given value."""
  LydDisplayOrder_not: Int

  """All values that are contained in given list."""
  LydDisplayOrder_in: [Int!]

  """All values that are not contained in given list."""
  LydDisplayOrder_not_in: [Int!]

  """All values less than the given value."""
  LydDisplayOrder_lt: Int

  """All values less than or equal the given value."""
  LydDisplayOrder_lte: Int

  """All values greater than the given value."""
  LydDisplayOrder_gt: Int

  """All values greater than or equal the given value."""
  LydDisplayOrder_gte: Int
  LydDisplayCaming: String

  """All values that are not equal to given value."""
  LydDisplayCaming_not: String

  """All values that are contained in given list."""
  LydDisplayCaming_in: [String!]

  """All values that are not contained in given list."""
  LydDisplayCaming_not_in: [String!]

  """All values less than the given value."""
  LydDisplayCaming_lt: String

  """All values less than or equal the given value."""
  LydDisplayCaming_lte: String

  """All values greater than the given value."""
  LydDisplayCaming_gt: String

  """All values greater than or equal the given value."""
  LydDisplayCaming_gte: String

  """All values containing the given string."""
  LydDisplayCaming_contains: String

  """All values not containing the given string."""
  LydDisplayCaming_not_contains: String

  """All values starting with the given string."""
  LydDisplayCaming_starts_with: String

  """All values not starting with the given string."""
  LydDisplayCaming_not_starts_with: String

  """All values ending with the given string."""
  LydDisplayCaming_ends_with: String

  """All values not ending with the given string."""
  LydDisplayCaming_not_ends_with: String
  FacetMaterial: String

  """All values that are not equal to given value."""
  FacetMaterial_not: String

  """All values that are contained in given list."""
  FacetMaterial_in: [String!]

  """All values that are not contained in given list."""
  FacetMaterial_not_in: [String!]

  """All values less than the given value."""
  FacetMaterial_lt: String

  """All values less than or equal the given value."""
  FacetMaterial_lte: String

  """All values greater than the given value."""
  FacetMaterial_gt: String

  """All values greater than or equal the given value."""
  FacetMaterial_gte: String

  """All values containing the given string."""
  FacetMaterial_contains: String

  """All values not containing the given string."""
  FacetMaterial_not_contains: String

  """All values starting with the given string."""
  FacetMaterial_starts_with: String

  """All values not starting with the given string."""
  FacetMaterial_not_starts_with: String

  """All values ending with the given string."""
  FacetMaterial_ends_with: String

  """All values not ending with the given string."""
  FacetMaterial_not_ends_with: String
  FacetRecentlyLaunched: String

  """All values that are not equal to given value."""
  FacetRecentlyLaunched_not: String

  """All values that are contained in given list."""
  FacetRecentlyLaunched_in: [String!]

  """All values that are not contained in given list."""
  FacetRecentlyLaunched_not_in: [String!]

  """All values less than the given value."""
  FacetRecentlyLaunched_lt: String

  """All values less than or equal the given value."""
  FacetRecentlyLaunched_lte: String

  """All values greater than the given value."""
  FacetRecentlyLaunched_gt: String

  """All values greater than or equal the given value."""
  FacetRecentlyLaunched_gte: String

  """All values containing the given string."""
  FacetRecentlyLaunched_contains: String

  """All values not containing the given string."""
  FacetRecentlyLaunched_not_contains: String

  """All values starting with the given string."""
  FacetRecentlyLaunched_starts_with: String

  """All values not starting with the given string."""
  FacetRecentlyLaunched_not_starts_with: String

  """All values ending with the given string."""
  FacetRecentlyLaunched_ends_with: String

  """All values not ending with the given string."""
  FacetRecentlyLaunched_not_ends_with: String
  RelatedStyleID: String

  """All values that are not equal to given value."""
  RelatedStyleID_not: String

  """All values that are contained in given list."""
  RelatedStyleID_in: [String!]

  """All values that are not contained in given list."""
  RelatedStyleID_not_in: [String!]

  """All values less than the given value."""
  RelatedStyleID_lt: String

  """All values less than or equal the given value."""
  RelatedStyleID_lte: String

  """All values greater than the given value."""
  RelatedStyleID_gt: String

  """All values greater than or equal the given value."""
  RelatedStyleID_gte: String

  """All values containing the given string."""
  RelatedStyleID_contains: String

  """All values not containing the given string."""
  RelatedStyleID_not_contains: String

  """All values starting with the given string."""
  RelatedStyleID_starts_with: String

  """All values not starting with the given string."""
  RelatedStyleID_not_starts_with: String

  """All values ending with the given string."""
  RelatedStyleID_ends_with: String

  """All values not ending with the given string."""
  RelatedStyleID_not_ends_with: String
  AllowsHandlesets: Boolean

  """All values that are not equal to given value."""
  AllowsHandlesets_not: Boolean
  IsFlushGlazed: Boolean

  """All values that are not equal to given value."""
  IsFlushGlazed_not: Boolean
}

type DoorSubscriptionPayload {
  mutation: MutationType!
  node: Door
  updatedFields: [String!]
  previousValues: DoorPreviousValues
}

input DoorSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [DoorSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [DoorSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DoorSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: DoorWhereInput
}

input DoorUpdateAllowedSidelitesInput {
  set: [String!]
}

input DoorUpdateAllowedTransomsInput {
  set: [String!]
}

input DoorUpdateArchitecturalStyleInput {
  set: [String!]
}

input DoorUpdateAvailableSizeDetailsInput {
  set: [String!]
}

input DoorUpdateAvailableSizesInput {
  set: [String!]
}

input DoorUpdateCurrentYearTrendsInput {
  set: [String!]
}

input DoorUpdateGlassFeaturesInput {
  set: [String!]
}

input DoorUpdateInput {
  Brand: String
  StyleNumber: String
  ProductLine: String
  DoorType: String
  ParentGlassFamilyAbbreviation: String
  GlassFamilyAbbreviation: String
  LiteQuantity: Int
  DefaultSize: String
  VisualizedHeight: Int
  VisualizedWidth: Int
  LaunchYear: Int
  RecentlyLaunched: Boolean
  GlassSizeCategory: String
  DefaultSidelite: String
  DefaultTransom: String
  DefaultGlassWidth: String
  AbstractPrice: Int
  SOSPrice: Float
  MDSPrice: Float
  LowesStocked: Boolean
  GlassType: String
  GlassDesign: String
  DefaultImageName: String
  ImageUrl: String
  Ordinal: Int
  GlassAssociation: String
  IsLimitedAvailability: Boolean
  ProductTrends: String
  DefaultDoorSurroundStyleNumber: String
  GrainProfile: String
  LydDisplay: Boolean
  LydDefaultFinishId: String
  LydGlassCategory: String
  LydDisplayOrder: Int
  LydDisplayCaming: String
  FacetMaterial: String
  FacetRecentlyLaunched: String
  RelatedStyleID: String
  AllowsHandlesets: Boolean
  IsFlushGlazed: Boolean
  ArchitecturalStyle: DoorUpdateArchitecturalStyleInput
  LocationOnHouse: DoorUpdateLocationOnHouseInput
  AvailableSizeDetails: DoorUpdateAvailableSizeDetailsInput
  AvailableSizes: DoorUpdateAvailableSizesInput
  StyleGroups: DoorUpdateStyleGroupsInput
  RatingEligibility: DoorUpdateRatingEligibilityInput
  SupportedAccessories: DoorUpdateSupportedAccessoriesInput
  AllowedSidelites: DoorUpdateAllowedSidelitesInput
  AllowedTransoms: DoorUpdateAllowedTransomsInput
  GlassFeatures: DoorUpdateGlassFeaturesInput
  LimitedAvailabilityCategories: DoorUpdateLimitedAvailabilityCategoriesInput
  CurrentYearTrends: DoorUpdateCurrentYearTrendsInput
  LydAvailableFinishIds: DoorUpdateLydAvailableFinishIdsInput
  DoorCollection: DoorCollectionUpdateOneWithoutDoorsInput
  DoorLine: DoorLineUpdateOneWithoutDoorsInput
  FrameProfiles: FrameProfilesUpdateManyWithoutDoorsInput
  DefaultFrameProfile: FrameProfilesUpdateOneInput
  StyleShape: StyleShapeUpdateOneWithoutDoorsInput
  StyleLayoutPairs: StyleLayoutPairsUpdateOneWithoutDoorsInput
  Sidelites: SidelitesUpdateManyWithoutDoorsInput
}

input DoorUpdateLimitedAvailabilityCategoriesInput {
  set: [String!]
}

input DoorUpdateLocationOnHouseInput {
  set: [String!]
}

input DoorUpdateLydAvailableFinishIdsInput {
  set: [String!]
}

input DoorUpdateManyDataInput {
  Brand: String
  StyleNumber: String
  ProductLine: String
  DoorType: String
  ParentGlassFamilyAbbreviation: String
  GlassFamilyAbbreviation: String
  LiteQuantity: Int
  DefaultSize: String
  VisualizedHeight: Int
  VisualizedWidth: Int
  LaunchYear: Int
  RecentlyLaunched: Boolean
  GlassSizeCategory: String
  DefaultSidelite: String
  DefaultTransom: String
  DefaultGlassWidth: String
  AbstractPrice: Int
  SOSPrice: Float
  MDSPrice: Float
  LowesStocked: Boolean
  GlassType: String
  GlassDesign: String
  DefaultImageName: String
  ImageUrl: String
  Ordinal: Int
  GlassAssociation: String
  IsLimitedAvailability: Boolean
  ProductTrends: String
  DefaultDoorSurroundStyleNumber: String
  GrainProfile: String
  LydDisplay: Boolean
  LydDefaultFinishId: String
  LydGlassCategory: String
  LydDisplayOrder: Int
  LydDisplayCaming: String
  FacetMaterial: String
  FacetRecentlyLaunched: String
  RelatedStyleID: String
  AllowsHandlesets: Boolean
  IsFlushGlazed: Boolean
  ArchitecturalStyle: DoorUpdateArchitecturalStyleInput
  LocationOnHouse: DoorUpdateLocationOnHouseInput
  AvailableSizeDetails: DoorUpdateAvailableSizeDetailsInput
  AvailableSizes: DoorUpdateAvailableSizesInput
  StyleGroups: DoorUpdateStyleGroupsInput
  RatingEligibility: DoorUpdateRatingEligibilityInput
  SupportedAccessories: DoorUpdateSupportedAccessoriesInput
  AllowedSidelites: DoorUpdateAllowedSidelitesInput
  AllowedTransoms: DoorUpdateAllowedTransomsInput
  GlassFeatures: DoorUpdateGlassFeaturesInput
  LimitedAvailabilityCategories: DoorUpdateLimitedAvailabilityCategoriesInput
  CurrentYearTrends: DoorUpdateCurrentYearTrendsInput
  LydAvailableFinishIds: DoorUpdateLydAvailableFinishIdsInput
}

input DoorUpdateManyMutationInput {
  Brand: String
  StyleNumber: String
  ProductLine: String
  DoorType: String
  ParentGlassFamilyAbbreviation: String
  GlassFamilyAbbreviation: String
  LiteQuantity: Int
  DefaultSize: String
  VisualizedHeight: Int
  VisualizedWidth: Int
  LaunchYear: Int
  RecentlyLaunched: Boolean
  GlassSizeCategory: String
  DefaultSidelite: String
  DefaultTransom: String
  DefaultGlassWidth: String
  AbstractPrice: Int
  SOSPrice: Float
  MDSPrice: Float
  LowesStocked: Boolean
  GlassType: String
  GlassDesign: String
  DefaultImageName: String
  ImageUrl: String
  Ordinal: Int
  GlassAssociation: String
  IsLimitedAvailability: Boolean
  ProductTrends: String
  DefaultDoorSurroundStyleNumber: String
  GrainProfile: String
  LydDisplay: Boolean
  LydDefaultFinishId: String
  LydGlassCategory: String
  LydDisplayOrder: Int
  LydDisplayCaming: String
  FacetMaterial: String
  FacetRecentlyLaunched: String
  RelatedStyleID: String
  AllowsHandlesets: Boolean
  IsFlushGlazed: Boolean
  ArchitecturalStyle: DoorUpdateArchitecturalStyleInput
  LocationOnHouse: DoorUpdateLocationOnHouseInput
  AvailableSizeDetails: DoorUpdateAvailableSizeDetailsInput
  AvailableSizes: DoorUpdateAvailableSizesInput
  StyleGroups: DoorUpdateStyleGroupsInput
  RatingEligibility: DoorUpdateRatingEligibilityInput
  SupportedAccessories: DoorUpdateSupportedAccessoriesInput
  AllowedSidelites: DoorUpdateAllowedSidelitesInput
  AllowedTransoms: DoorUpdateAllowedTransomsInput
  GlassFeatures: DoorUpdateGlassFeaturesInput
  LimitedAvailabilityCategories: DoorUpdateLimitedAvailabilityCategoriesInput
  CurrentYearTrends: DoorUpdateCurrentYearTrendsInput
  LydAvailableFinishIds: DoorUpdateLydAvailableFinishIdsInput
}

input DoorUpdateManyWithoutDoorCollectionInput {
  create: [DoorCreateWithoutDoorCollectionInput!]
  connect: [DoorWhereUniqueInput!]
  set: [DoorWhereUniqueInput!]
  disconnect: [DoorWhereUniqueInput!]
  delete: [DoorWhereUniqueInput!]
  update: [DoorUpdateWithWhereUniqueWithoutDoorCollectionInput!]
  updateMany: [DoorUpdateManyWithWhereNestedInput!]
  deleteMany: [DoorScalarWhereInput!]
  upsert: [DoorUpsertWithWhereUniqueWithoutDoorCollectionInput!]
}

input DoorUpdateManyWithoutDoorLineInput {
  create: [DoorCreateWithoutDoorLineInput!]
  connect: [DoorWhereUniqueInput!]
  set: [DoorWhereUniqueInput!]
  disconnect: [DoorWhereUniqueInput!]
  delete: [DoorWhereUniqueInput!]
  update: [DoorUpdateWithWhereUniqueWithoutDoorLineInput!]
  updateMany: [DoorUpdateManyWithWhereNestedInput!]
  deleteMany: [DoorScalarWhereInput!]
  upsert: [DoorUpsertWithWhereUniqueWithoutDoorLineInput!]
}

input DoorUpdateManyWithoutFrameProfilesInput {
  create: [DoorCreateWithoutFrameProfilesInput!]
  connect: [DoorWhereUniqueInput!]
  set: [DoorWhereUniqueInput!]
  disconnect: [DoorWhereUniqueInput!]
  delete: [DoorWhereUniqueInput!]
  update: [DoorUpdateWithWhereUniqueWithoutFrameProfilesInput!]
  updateMany: [DoorUpdateManyWithWhereNestedInput!]
  deleteMany: [DoorScalarWhereInput!]
  upsert: [DoorUpsertWithWhereUniqueWithoutFrameProfilesInput!]
}

input DoorUpdateManyWithoutSidelitesInput {
  create: [DoorCreateWithoutSidelitesInput!]
  connect: [DoorWhereUniqueInput!]
  set: [DoorWhereUniqueInput!]
  disconnect: [DoorWhereUniqueInput!]
  delete: [DoorWhereUniqueInput!]
  update: [DoorUpdateWithWhereUniqueWithoutSidelitesInput!]
  updateMany: [DoorUpdateManyWithWhereNestedInput!]
  deleteMany: [DoorScalarWhereInput!]
  upsert: [DoorUpsertWithWhereUniqueWithoutSidelitesInput!]
}

input DoorUpdateManyWithoutStyleLayoutPairsInput {
  create: [DoorCreateWithoutStyleLayoutPairsInput!]
  connect: [DoorWhereUniqueInput!]
  set: [DoorWhereUniqueInput!]
  disconnect: [DoorWhereUniqueInput!]
  delete: [DoorWhereUniqueInput!]
  update: [DoorUpdateWithWhereUniqueWithoutStyleLayoutPairsInput!]
  updateMany: [DoorUpdateManyWithWhereNestedInput!]
  deleteMany: [DoorScalarWhereInput!]
  upsert: [DoorUpsertWithWhereUniqueWithoutStyleLayoutPairsInput!]
}

input DoorUpdateManyWithoutStyleShapeInput {
  create: [DoorCreateWithoutStyleShapeInput!]
  connect: [DoorWhereUniqueInput!]
  set: [DoorWhereUniqueInput!]
  disconnect: [DoorWhereUniqueInput!]
  delete: [DoorWhereUniqueInput!]
  update: [DoorUpdateWithWhereUniqueWithoutStyleShapeInput!]
  updateMany: [DoorUpdateManyWithWhereNestedInput!]
  deleteMany: [DoorScalarWhereInput!]
  upsert: [DoorUpsertWithWhereUniqueWithoutStyleShapeInput!]
}

input DoorUpdateManyWithWhereNestedInput {
  where: DoorScalarWhereInput!
  data: DoorUpdateManyDataInput!
}

input DoorUpdateRatingEligibilityInput {
  set: [String!]
}

input DoorUpdateStyleGroupsInput {
  set: [String!]
}

input DoorUpdateSupportedAccessoriesInput {
  set: [String!]
}

input DoorUpdateWithoutDoorCollectionDataInput {
  Brand: String
  StyleNumber: String
  ProductLine: String
  DoorType: String
  ParentGlassFamilyAbbreviation: String
  GlassFamilyAbbreviation: String
  LiteQuantity: Int
  DefaultSize: String
  VisualizedHeight: Int
  VisualizedWidth: Int
  LaunchYear: Int
  RecentlyLaunched: Boolean
  GlassSizeCategory: String
  DefaultSidelite: String
  DefaultTransom: String
  DefaultGlassWidth: String
  AbstractPrice: Int
  SOSPrice: Float
  MDSPrice: Float
  LowesStocked: Boolean
  GlassType: String
  GlassDesign: String
  DefaultImageName: String
  ImageUrl: String
  Ordinal: Int
  GlassAssociation: String
  IsLimitedAvailability: Boolean
  ProductTrends: String
  DefaultDoorSurroundStyleNumber: String
  GrainProfile: String
  LydDisplay: Boolean
  LydDefaultFinishId: String
  LydGlassCategory: String
  LydDisplayOrder: Int
  LydDisplayCaming: String
  FacetMaterial: String
  FacetRecentlyLaunched: String
  RelatedStyleID: String
  AllowsHandlesets: Boolean
  IsFlushGlazed: Boolean
  ArchitecturalStyle: DoorUpdateArchitecturalStyleInput
  LocationOnHouse: DoorUpdateLocationOnHouseInput
  AvailableSizeDetails: DoorUpdateAvailableSizeDetailsInput
  AvailableSizes: DoorUpdateAvailableSizesInput
  StyleGroups: DoorUpdateStyleGroupsInput
  RatingEligibility: DoorUpdateRatingEligibilityInput
  SupportedAccessories: DoorUpdateSupportedAccessoriesInput
  AllowedSidelites: DoorUpdateAllowedSidelitesInput
  AllowedTransoms: DoorUpdateAllowedTransomsInput
  GlassFeatures: DoorUpdateGlassFeaturesInput
  LimitedAvailabilityCategories: DoorUpdateLimitedAvailabilityCategoriesInput
  CurrentYearTrends: DoorUpdateCurrentYearTrendsInput
  LydAvailableFinishIds: DoorUpdateLydAvailableFinishIdsInput
  DoorLine: DoorLineUpdateOneWithoutDoorsInput
  FrameProfiles: FrameProfilesUpdateManyWithoutDoorsInput
  DefaultFrameProfile: FrameProfilesUpdateOneInput
  StyleShape: StyleShapeUpdateOneWithoutDoorsInput
  StyleLayoutPairs: StyleLayoutPairsUpdateOneWithoutDoorsInput
  Sidelites: SidelitesUpdateManyWithoutDoorsInput
}

input DoorUpdateWithoutDoorLineDataInput {
  Brand: String
  StyleNumber: String
  ProductLine: String
  DoorType: String
  ParentGlassFamilyAbbreviation: String
  GlassFamilyAbbreviation: String
  LiteQuantity: Int
  DefaultSize: String
  VisualizedHeight: Int
  VisualizedWidth: Int
  LaunchYear: Int
  RecentlyLaunched: Boolean
  GlassSizeCategory: String
  DefaultSidelite: String
  DefaultTransom: String
  DefaultGlassWidth: String
  AbstractPrice: Int
  SOSPrice: Float
  MDSPrice: Float
  LowesStocked: Boolean
  GlassType: String
  GlassDesign: String
  DefaultImageName: String
  ImageUrl: String
  Ordinal: Int
  GlassAssociation: String
  IsLimitedAvailability: Boolean
  ProductTrends: String
  DefaultDoorSurroundStyleNumber: String
  GrainProfile: String
  LydDisplay: Boolean
  LydDefaultFinishId: String
  LydGlassCategory: String
  LydDisplayOrder: Int
  LydDisplayCaming: String
  FacetMaterial: String
  FacetRecentlyLaunched: String
  RelatedStyleID: String
  AllowsHandlesets: Boolean
  IsFlushGlazed: Boolean
  ArchitecturalStyle: DoorUpdateArchitecturalStyleInput
  LocationOnHouse: DoorUpdateLocationOnHouseInput
  AvailableSizeDetails: DoorUpdateAvailableSizeDetailsInput
  AvailableSizes: DoorUpdateAvailableSizesInput
  StyleGroups: DoorUpdateStyleGroupsInput
  RatingEligibility: DoorUpdateRatingEligibilityInput
  SupportedAccessories: DoorUpdateSupportedAccessoriesInput
  AllowedSidelites: DoorUpdateAllowedSidelitesInput
  AllowedTransoms: DoorUpdateAllowedTransomsInput
  GlassFeatures: DoorUpdateGlassFeaturesInput
  LimitedAvailabilityCategories: DoorUpdateLimitedAvailabilityCategoriesInput
  CurrentYearTrends: DoorUpdateCurrentYearTrendsInput
  LydAvailableFinishIds: DoorUpdateLydAvailableFinishIdsInput
  DoorCollection: DoorCollectionUpdateOneWithoutDoorsInput
  FrameProfiles: FrameProfilesUpdateManyWithoutDoorsInput
  DefaultFrameProfile: FrameProfilesUpdateOneInput
  StyleShape: StyleShapeUpdateOneWithoutDoorsInput
  StyleLayoutPairs: StyleLayoutPairsUpdateOneWithoutDoorsInput
  Sidelites: SidelitesUpdateManyWithoutDoorsInput
}

input DoorUpdateWithoutFrameProfilesDataInput {
  Brand: String
  StyleNumber: String
  ProductLine: String
  DoorType: String
  ParentGlassFamilyAbbreviation: String
  GlassFamilyAbbreviation: String
  LiteQuantity: Int
  DefaultSize: String
  VisualizedHeight: Int
  VisualizedWidth: Int
  LaunchYear: Int
  RecentlyLaunched: Boolean
  GlassSizeCategory: String
  DefaultSidelite: String
  DefaultTransom: String
  DefaultGlassWidth: String
  AbstractPrice: Int
  SOSPrice: Float
  MDSPrice: Float
  LowesStocked: Boolean
  GlassType: String
  GlassDesign: String
  DefaultImageName: String
  ImageUrl: String
  Ordinal: Int
  GlassAssociation: String
  IsLimitedAvailability: Boolean
  ProductTrends: String
  DefaultDoorSurroundStyleNumber: String
  GrainProfile: String
  LydDisplay: Boolean
  LydDefaultFinishId: String
  LydGlassCategory: String
  LydDisplayOrder: Int
  LydDisplayCaming: String
  FacetMaterial: String
  FacetRecentlyLaunched: String
  RelatedStyleID: String
  AllowsHandlesets: Boolean
  IsFlushGlazed: Boolean
  ArchitecturalStyle: DoorUpdateArchitecturalStyleInput
  LocationOnHouse: DoorUpdateLocationOnHouseInput
  AvailableSizeDetails: DoorUpdateAvailableSizeDetailsInput
  AvailableSizes: DoorUpdateAvailableSizesInput
  StyleGroups: DoorUpdateStyleGroupsInput
  RatingEligibility: DoorUpdateRatingEligibilityInput
  SupportedAccessories: DoorUpdateSupportedAccessoriesInput
  AllowedSidelites: DoorUpdateAllowedSidelitesInput
  AllowedTransoms: DoorUpdateAllowedTransomsInput
  GlassFeatures: DoorUpdateGlassFeaturesInput
  LimitedAvailabilityCategories: DoorUpdateLimitedAvailabilityCategoriesInput
  CurrentYearTrends: DoorUpdateCurrentYearTrendsInput
  LydAvailableFinishIds: DoorUpdateLydAvailableFinishIdsInput
  DoorCollection: DoorCollectionUpdateOneWithoutDoorsInput
  DoorLine: DoorLineUpdateOneWithoutDoorsInput
  DefaultFrameProfile: FrameProfilesUpdateOneInput
  StyleShape: StyleShapeUpdateOneWithoutDoorsInput
  StyleLayoutPairs: StyleLayoutPairsUpdateOneWithoutDoorsInput
  Sidelites: SidelitesUpdateManyWithoutDoorsInput
}

input DoorUpdateWithoutSidelitesDataInput {
  Brand: String
  StyleNumber: String
  ProductLine: String
  DoorType: String
  ParentGlassFamilyAbbreviation: String
  GlassFamilyAbbreviation: String
  LiteQuantity: Int
  DefaultSize: String
  VisualizedHeight: Int
  VisualizedWidth: Int
  LaunchYear: Int
  RecentlyLaunched: Boolean
  GlassSizeCategory: String
  DefaultSidelite: String
  DefaultTransom: String
  DefaultGlassWidth: String
  AbstractPrice: Int
  SOSPrice: Float
  MDSPrice: Float
  LowesStocked: Boolean
  GlassType: String
  GlassDesign: String
  DefaultImageName: String
  ImageUrl: String
  Ordinal: Int
  GlassAssociation: String
  IsLimitedAvailability: Boolean
  ProductTrends: String
  DefaultDoorSurroundStyleNumber: String
  GrainProfile: String
  LydDisplay: Boolean
  LydDefaultFinishId: String
  LydGlassCategory: String
  LydDisplayOrder: Int
  LydDisplayCaming: String
  FacetMaterial: String
  FacetRecentlyLaunched: String
  RelatedStyleID: String
  AllowsHandlesets: Boolean
  IsFlushGlazed: Boolean
  ArchitecturalStyle: DoorUpdateArchitecturalStyleInput
  LocationOnHouse: DoorUpdateLocationOnHouseInput
  AvailableSizeDetails: DoorUpdateAvailableSizeDetailsInput
  AvailableSizes: DoorUpdateAvailableSizesInput
  StyleGroups: DoorUpdateStyleGroupsInput
  RatingEligibility: DoorUpdateRatingEligibilityInput
  SupportedAccessories: DoorUpdateSupportedAccessoriesInput
  AllowedSidelites: DoorUpdateAllowedSidelitesInput
  AllowedTransoms: DoorUpdateAllowedTransomsInput
  GlassFeatures: DoorUpdateGlassFeaturesInput
  LimitedAvailabilityCategories: DoorUpdateLimitedAvailabilityCategoriesInput
  CurrentYearTrends: DoorUpdateCurrentYearTrendsInput
  LydAvailableFinishIds: DoorUpdateLydAvailableFinishIdsInput
  DoorCollection: DoorCollectionUpdateOneWithoutDoorsInput
  DoorLine: DoorLineUpdateOneWithoutDoorsInput
  FrameProfiles: FrameProfilesUpdateManyWithoutDoorsInput
  DefaultFrameProfile: FrameProfilesUpdateOneInput
  StyleShape: StyleShapeUpdateOneWithoutDoorsInput
  StyleLayoutPairs: StyleLayoutPairsUpdateOneWithoutDoorsInput
}

input DoorUpdateWithoutStyleLayoutPairsDataInput {
  Brand: String
  StyleNumber: String
  ProductLine: String
  DoorType: String
  ParentGlassFamilyAbbreviation: String
  GlassFamilyAbbreviation: String
  LiteQuantity: Int
  DefaultSize: String
  VisualizedHeight: Int
  VisualizedWidth: Int
  LaunchYear: Int
  RecentlyLaunched: Boolean
  GlassSizeCategory: String
  DefaultSidelite: String
  DefaultTransom: String
  DefaultGlassWidth: String
  AbstractPrice: Int
  SOSPrice: Float
  MDSPrice: Float
  LowesStocked: Boolean
  GlassType: String
  GlassDesign: String
  DefaultImageName: String
  ImageUrl: String
  Ordinal: Int
  GlassAssociation: String
  IsLimitedAvailability: Boolean
  ProductTrends: String
  DefaultDoorSurroundStyleNumber: String
  GrainProfile: String
  LydDisplay: Boolean
  LydDefaultFinishId: String
  LydGlassCategory: String
  LydDisplayOrder: Int
  LydDisplayCaming: String
  FacetMaterial: String
  FacetRecentlyLaunched: String
  RelatedStyleID: String
  AllowsHandlesets: Boolean
  IsFlushGlazed: Boolean
  ArchitecturalStyle: DoorUpdateArchitecturalStyleInput
  LocationOnHouse: DoorUpdateLocationOnHouseInput
  AvailableSizeDetails: DoorUpdateAvailableSizeDetailsInput
  AvailableSizes: DoorUpdateAvailableSizesInput
  StyleGroups: DoorUpdateStyleGroupsInput
  RatingEligibility: DoorUpdateRatingEligibilityInput
  SupportedAccessories: DoorUpdateSupportedAccessoriesInput
  AllowedSidelites: DoorUpdateAllowedSidelitesInput
  AllowedTransoms: DoorUpdateAllowedTransomsInput
  GlassFeatures: DoorUpdateGlassFeaturesInput
  LimitedAvailabilityCategories: DoorUpdateLimitedAvailabilityCategoriesInput
  CurrentYearTrends: DoorUpdateCurrentYearTrendsInput
  LydAvailableFinishIds: DoorUpdateLydAvailableFinishIdsInput
  DoorCollection: DoorCollectionUpdateOneWithoutDoorsInput
  DoorLine: DoorLineUpdateOneWithoutDoorsInput
  FrameProfiles: FrameProfilesUpdateManyWithoutDoorsInput
  DefaultFrameProfile: FrameProfilesUpdateOneInput
  StyleShape: StyleShapeUpdateOneWithoutDoorsInput
  Sidelites: SidelitesUpdateManyWithoutDoorsInput
}

input DoorUpdateWithoutStyleShapeDataInput {
  Brand: String
  StyleNumber: String
  ProductLine: String
  DoorType: String
  ParentGlassFamilyAbbreviation: String
  GlassFamilyAbbreviation: String
  LiteQuantity: Int
  DefaultSize: String
  VisualizedHeight: Int
  VisualizedWidth: Int
  LaunchYear: Int
  RecentlyLaunched: Boolean
  GlassSizeCategory: String
  DefaultSidelite: String
  DefaultTransom: String
  DefaultGlassWidth: String
  AbstractPrice: Int
  SOSPrice: Float
  MDSPrice: Float
  LowesStocked: Boolean
  GlassType: String
  GlassDesign: String
  DefaultImageName: String
  ImageUrl: String
  Ordinal: Int
  GlassAssociation: String
  IsLimitedAvailability: Boolean
  ProductTrends: String
  DefaultDoorSurroundStyleNumber: String
  GrainProfile: String
  LydDisplay: Boolean
  LydDefaultFinishId: String
  LydGlassCategory: String
  LydDisplayOrder: Int
  LydDisplayCaming: String
  FacetMaterial: String
  FacetRecentlyLaunched: String
  RelatedStyleID: String
  AllowsHandlesets: Boolean
  IsFlushGlazed: Boolean
  ArchitecturalStyle: DoorUpdateArchitecturalStyleInput
  LocationOnHouse: DoorUpdateLocationOnHouseInput
  AvailableSizeDetails: DoorUpdateAvailableSizeDetailsInput
  AvailableSizes: DoorUpdateAvailableSizesInput
  StyleGroups: DoorUpdateStyleGroupsInput
  RatingEligibility: DoorUpdateRatingEligibilityInput
  SupportedAccessories: DoorUpdateSupportedAccessoriesInput
  AllowedSidelites: DoorUpdateAllowedSidelitesInput
  AllowedTransoms: DoorUpdateAllowedTransomsInput
  GlassFeatures: DoorUpdateGlassFeaturesInput
  LimitedAvailabilityCategories: DoorUpdateLimitedAvailabilityCategoriesInput
  CurrentYearTrends: DoorUpdateCurrentYearTrendsInput
  LydAvailableFinishIds: DoorUpdateLydAvailableFinishIdsInput
  DoorCollection: DoorCollectionUpdateOneWithoutDoorsInput
  DoorLine: DoorLineUpdateOneWithoutDoorsInput
  FrameProfiles: FrameProfilesUpdateManyWithoutDoorsInput
  DefaultFrameProfile: FrameProfilesUpdateOneInput
  StyleLayoutPairs: StyleLayoutPairsUpdateOneWithoutDoorsInput
  Sidelites: SidelitesUpdateManyWithoutDoorsInput
}

input DoorUpdateWithWhereUniqueWithoutDoorCollectionInput {
  where: DoorWhereUniqueInput!
  data: DoorUpdateWithoutDoorCollectionDataInput!
}

input DoorUpdateWithWhereUniqueWithoutDoorLineInput {
  where: DoorWhereUniqueInput!
  data: DoorUpdateWithoutDoorLineDataInput!
}

input DoorUpdateWithWhereUniqueWithoutFrameProfilesInput {
  where: DoorWhereUniqueInput!
  data: DoorUpdateWithoutFrameProfilesDataInput!
}

input DoorUpdateWithWhereUniqueWithoutSidelitesInput {
  where: DoorWhereUniqueInput!
  data: DoorUpdateWithoutSidelitesDataInput!
}

input DoorUpdateWithWhereUniqueWithoutStyleLayoutPairsInput {
  where: DoorWhereUniqueInput!
  data: DoorUpdateWithoutStyleLayoutPairsDataInput!
}

input DoorUpdateWithWhereUniqueWithoutStyleShapeInput {
  where: DoorWhereUniqueInput!
  data: DoorUpdateWithoutStyleShapeDataInput!
}

input DoorUpsertWithWhereUniqueWithoutDoorCollectionInput {
  where: DoorWhereUniqueInput!
  update: DoorUpdateWithoutDoorCollectionDataInput!
  create: DoorCreateWithoutDoorCollectionInput!
}

input DoorUpsertWithWhereUniqueWithoutDoorLineInput {
  where: DoorWhereUniqueInput!
  update: DoorUpdateWithoutDoorLineDataInput!
  create: DoorCreateWithoutDoorLineInput!
}

input DoorUpsertWithWhereUniqueWithoutFrameProfilesInput {
  where: DoorWhereUniqueInput!
  update: DoorUpdateWithoutFrameProfilesDataInput!
  create: DoorCreateWithoutFrameProfilesInput!
}

input DoorUpsertWithWhereUniqueWithoutSidelitesInput {
  where: DoorWhereUniqueInput!
  update: DoorUpdateWithoutSidelitesDataInput!
  create: DoorCreateWithoutSidelitesInput!
}

input DoorUpsertWithWhereUniqueWithoutStyleLayoutPairsInput {
  where: DoorWhereUniqueInput!
  update: DoorUpdateWithoutStyleLayoutPairsDataInput!
  create: DoorCreateWithoutStyleLayoutPairsInput!
}

input DoorUpsertWithWhereUniqueWithoutStyleShapeInput {
  where: DoorWhereUniqueInput!
  update: DoorUpdateWithoutStyleShapeDataInput!
  create: DoorCreateWithoutStyleShapeInput!
}

input DoorWhereInput {
  """Logical AND on all given filters."""
  AND: [DoorWhereInput!]

  """Logical OR on all given filters."""
  OR: [DoorWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DoorWhereInput!]
  Id: ID

  """All values that are not equal to given value."""
  Id_not: ID

  """All values that are contained in given list."""
  Id_in: [ID!]

  """All values that are not contained in given list."""
  Id_not_in: [ID!]

  """All values less than the given value."""
  Id_lt: ID

  """All values less than or equal the given value."""
  Id_lte: ID

  """All values greater than the given value."""
  Id_gt: ID

  """All values greater than or equal the given value."""
  Id_gte: ID

  """All values containing the given string."""
  Id_contains: ID

  """All values not containing the given string."""
  Id_not_contains: ID

  """All values starting with the given string."""
  Id_starts_with: ID

  """All values not starting with the given string."""
  Id_not_starts_with: ID

  """All values ending with the given string."""
  Id_ends_with: ID

  """All values not ending with the given string."""
  Id_not_ends_with: ID
  Brand: String

  """All values that are not equal to given value."""
  Brand_not: String

  """All values that are contained in given list."""
  Brand_in: [String!]

  """All values that are not contained in given list."""
  Brand_not_in: [String!]

  """All values less than the given value."""
  Brand_lt: String

  """All values less than or equal the given value."""
  Brand_lte: String

  """All values greater than the given value."""
  Brand_gt: String

  """All values greater than or equal the given value."""
  Brand_gte: String

  """All values containing the given string."""
  Brand_contains: String

  """All values not containing the given string."""
  Brand_not_contains: String

  """All values starting with the given string."""
  Brand_starts_with: String

  """All values not starting with the given string."""
  Brand_not_starts_with: String

  """All values ending with the given string."""
  Brand_ends_with: String

  """All values not ending with the given string."""
  Brand_not_ends_with: String
  StyleNumber: String

  """All values that are not equal to given value."""
  StyleNumber_not: String

  """All values that are contained in given list."""
  StyleNumber_in: [String!]

  """All values that are not contained in given list."""
  StyleNumber_not_in: [String!]

  """All values less than the given value."""
  StyleNumber_lt: String

  """All values less than or equal the given value."""
  StyleNumber_lte: String

  """All values greater than the given value."""
  StyleNumber_gt: String

  """All values greater than or equal the given value."""
  StyleNumber_gte: String

  """All values containing the given string."""
  StyleNumber_contains: String

  """All values not containing the given string."""
  StyleNumber_not_contains: String

  """All values starting with the given string."""
  StyleNumber_starts_with: String

  """All values not starting with the given string."""
  StyleNumber_not_starts_with: String

  """All values ending with the given string."""
  StyleNumber_ends_with: String

  """All values not ending with the given string."""
  StyleNumber_not_ends_with: String
  ProductLine: String

  """All values that are not equal to given value."""
  ProductLine_not: String

  """All values that are contained in given list."""
  ProductLine_in: [String!]

  """All values that are not contained in given list."""
  ProductLine_not_in: [String!]

  """All values less than the given value."""
  ProductLine_lt: String

  """All values less than or equal the given value."""
  ProductLine_lte: String

  """All values greater than the given value."""
  ProductLine_gt: String

  """All values greater than or equal the given value."""
  ProductLine_gte: String

  """All values containing the given string."""
  ProductLine_contains: String

  """All values not containing the given string."""
  ProductLine_not_contains: String

  """All values starting with the given string."""
  ProductLine_starts_with: String

  """All values not starting with the given string."""
  ProductLine_not_starts_with: String

  """All values ending with the given string."""
  ProductLine_ends_with: String

  """All values not ending with the given string."""
  ProductLine_not_ends_with: String
  DoorType: String

  """All values that are not equal to given value."""
  DoorType_not: String

  """All values that are contained in given list."""
  DoorType_in: [String!]

  """All values that are not contained in given list."""
  DoorType_not_in: [String!]

  """All values less than the given value."""
  DoorType_lt: String

  """All values less than or equal the given value."""
  DoorType_lte: String

  """All values greater than the given value."""
  DoorType_gt: String

  """All values greater than or equal the given value."""
  DoorType_gte: String

  """All values containing the given string."""
  DoorType_contains: String

  """All values not containing the given string."""
  DoorType_not_contains: String

  """All values starting with the given string."""
  DoorType_starts_with: String

  """All values not starting with the given string."""
  DoorType_not_starts_with: String

  """All values ending with the given string."""
  DoorType_ends_with: String

  """All values not ending with the given string."""
  DoorType_not_ends_with: String
  ParentGlassFamilyAbbreviation: String

  """All values that are not equal to given value."""
  ParentGlassFamilyAbbreviation_not: String

  """All values that are contained in given list."""
  ParentGlassFamilyAbbreviation_in: [String!]

  """All values that are not contained in given list."""
  ParentGlassFamilyAbbreviation_not_in: [String!]

  """All values less than the given value."""
  ParentGlassFamilyAbbreviation_lt: String

  """All values less than or equal the given value."""
  ParentGlassFamilyAbbreviation_lte: String

  """All values greater than the given value."""
  ParentGlassFamilyAbbreviation_gt: String

  """All values greater than or equal the given value."""
  ParentGlassFamilyAbbreviation_gte: String

  """All values containing the given string."""
  ParentGlassFamilyAbbreviation_contains: String

  """All values not containing the given string."""
  ParentGlassFamilyAbbreviation_not_contains: String

  """All values starting with the given string."""
  ParentGlassFamilyAbbreviation_starts_with: String

  """All values not starting with the given string."""
  ParentGlassFamilyAbbreviation_not_starts_with: String

  """All values ending with the given string."""
  ParentGlassFamilyAbbreviation_ends_with: String

  """All values not ending with the given string."""
  ParentGlassFamilyAbbreviation_not_ends_with: String
  GlassFamilyAbbreviation: String

  """All values that are not equal to given value."""
  GlassFamilyAbbreviation_not: String

  """All values that are contained in given list."""
  GlassFamilyAbbreviation_in: [String!]

  """All values that are not contained in given list."""
  GlassFamilyAbbreviation_not_in: [String!]

  """All values less than the given value."""
  GlassFamilyAbbreviation_lt: String

  """All values less than or equal the given value."""
  GlassFamilyAbbreviation_lte: String

  """All values greater than the given value."""
  GlassFamilyAbbreviation_gt: String

  """All values greater than or equal the given value."""
  GlassFamilyAbbreviation_gte: String

  """All values containing the given string."""
  GlassFamilyAbbreviation_contains: String

  """All values not containing the given string."""
  GlassFamilyAbbreviation_not_contains: String

  """All values starting with the given string."""
  GlassFamilyAbbreviation_starts_with: String

  """All values not starting with the given string."""
  GlassFamilyAbbreviation_not_starts_with: String

  """All values ending with the given string."""
  GlassFamilyAbbreviation_ends_with: String

  """All values not ending with the given string."""
  GlassFamilyAbbreviation_not_ends_with: String
  LiteQuantity: Int

  """All values that are not equal to given value."""
  LiteQuantity_not: Int

  """All values that are contained in given list."""
  LiteQuantity_in: [Int!]

  """All values that are not contained in given list."""
  LiteQuantity_not_in: [Int!]

  """All values less than the given value."""
  LiteQuantity_lt: Int

  """All values less than or equal the given value."""
  LiteQuantity_lte: Int

  """All values greater than the given value."""
  LiteQuantity_gt: Int

  """All values greater than or equal the given value."""
  LiteQuantity_gte: Int
  DefaultSize: String

  """All values that are not equal to given value."""
  DefaultSize_not: String

  """All values that are contained in given list."""
  DefaultSize_in: [String!]

  """All values that are not contained in given list."""
  DefaultSize_not_in: [String!]

  """All values less than the given value."""
  DefaultSize_lt: String

  """All values less than or equal the given value."""
  DefaultSize_lte: String

  """All values greater than the given value."""
  DefaultSize_gt: String

  """All values greater than or equal the given value."""
  DefaultSize_gte: String

  """All values containing the given string."""
  DefaultSize_contains: String

  """All values not containing the given string."""
  DefaultSize_not_contains: String

  """All values starting with the given string."""
  DefaultSize_starts_with: String

  """All values not starting with the given string."""
  DefaultSize_not_starts_with: String

  """All values ending with the given string."""
  DefaultSize_ends_with: String

  """All values not ending with the given string."""
  DefaultSize_not_ends_with: String
  VisualizedHeight: Int

  """All values that are not equal to given value."""
  VisualizedHeight_not: Int

  """All values that are contained in given list."""
  VisualizedHeight_in: [Int!]

  """All values that are not contained in given list."""
  VisualizedHeight_not_in: [Int!]

  """All values less than the given value."""
  VisualizedHeight_lt: Int

  """All values less than or equal the given value."""
  VisualizedHeight_lte: Int

  """All values greater than the given value."""
  VisualizedHeight_gt: Int

  """All values greater than or equal the given value."""
  VisualizedHeight_gte: Int
  VisualizedWidth: Int

  """All values that are not equal to given value."""
  VisualizedWidth_not: Int

  """All values that are contained in given list."""
  VisualizedWidth_in: [Int!]

  """All values that are not contained in given list."""
  VisualizedWidth_not_in: [Int!]

  """All values less than the given value."""
  VisualizedWidth_lt: Int

  """All values less than or equal the given value."""
  VisualizedWidth_lte: Int

  """All values greater than the given value."""
  VisualizedWidth_gt: Int

  """All values greater than or equal the given value."""
  VisualizedWidth_gte: Int
  LaunchYear: Int

  """All values that are not equal to given value."""
  LaunchYear_not: Int

  """All values that are contained in given list."""
  LaunchYear_in: [Int!]

  """All values that are not contained in given list."""
  LaunchYear_not_in: [Int!]

  """All values less than the given value."""
  LaunchYear_lt: Int

  """All values less than or equal the given value."""
  LaunchYear_lte: Int

  """All values greater than the given value."""
  LaunchYear_gt: Int

  """All values greater than or equal the given value."""
  LaunchYear_gte: Int
  RecentlyLaunched: Boolean

  """All values that are not equal to given value."""
  RecentlyLaunched_not: Boolean
  GlassSizeCategory: String

  """All values that are not equal to given value."""
  GlassSizeCategory_not: String

  """All values that are contained in given list."""
  GlassSizeCategory_in: [String!]

  """All values that are not contained in given list."""
  GlassSizeCategory_not_in: [String!]

  """All values less than the given value."""
  GlassSizeCategory_lt: String

  """All values less than or equal the given value."""
  GlassSizeCategory_lte: String

  """All values greater than the given value."""
  GlassSizeCategory_gt: String

  """All values greater than or equal the given value."""
  GlassSizeCategory_gte: String

  """All values containing the given string."""
  GlassSizeCategory_contains: String

  """All values not containing the given string."""
  GlassSizeCategory_not_contains: String

  """All values starting with the given string."""
  GlassSizeCategory_starts_with: String

  """All values not starting with the given string."""
  GlassSizeCategory_not_starts_with: String

  """All values ending with the given string."""
  GlassSizeCategory_ends_with: String

  """All values not ending with the given string."""
  GlassSizeCategory_not_ends_with: String
  DefaultSidelite: String

  """All values that are not equal to given value."""
  DefaultSidelite_not: String

  """All values that are contained in given list."""
  DefaultSidelite_in: [String!]

  """All values that are not contained in given list."""
  DefaultSidelite_not_in: [String!]

  """All values less than the given value."""
  DefaultSidelite_lt: String

  """All values less than or equal the given value."""
  DefaultSidelite_lte: String

  """All values greater than the given value."""
  DefaultSidelite_gt: String

  """All values greater than or equal the given value."""
  DefaultSidelite_gte: String

  """All values containing the given string."""
  DefaultSidelite_contains: String

  """All values not containing the given string."""
  DefaultSidelite_not_contains: String

  """All values starting with the given string."""
  DefaultSidelite_starts_with: String

  """All values not starting with the given string."""
  DefaultSidelite_not_starts_with: String

  """All values ending with the given string."""
  DefaultSidelite_ends_with: String

  """All values not ending with the given string."""
  DefaultSidelite_not_ends_with: String
  DefaultTransom: String

  """All values that are not equal to given value."""
  DefaultTransom_not: String

  """All values that are contained in given list."""
  DefaultTransom_in: [String!]

  """All values that are not contained in given list."""
  DefaultTransom_not_in: [String!]

  """All values less than the given value."""
  DefaultTransom_lt: String

  """All values less than or equal the given value."""
  DefaultTransom_lte: String

  """All values greater than the given value."""
  DefaultTransom_gt: String

  """All values greater than or equal the given value."""
  DefaultTransom_gte: String

  """All values containing the given string."""
  DefaultTransom_contains: String

  """All values not containing the given string."""
  DefaultTransom_not_contains: String

  """All values starting with the given string."""
  DefaultTransom_starts_with: String

  """All values not starting with the given string."""
  DefaultTransom_not_starts_with: String

  """All values ending with the given string."""
  DefaultTransom_ends_with: String

  """All values not ending with the given string."""
  DefaultTransom_not_ends_with: String
  DefaultGlassWidth: String

  """All values that are not equal to given value."""
  DefaultGlassWidth_not: String

  """All values that are contained in given list."""
  DefaultGlassWidth_in: [String!]

  """All values that are not contained in given list."""
  DefaultGlassWidth_not_in: [String!]

  """All values less than the given value."""
  DefaultGlassWidth_lt: String

  """All values less than or equal the given value."""
  DefaultGlassWidth_lte: String

  """All values greater than the given value."""
  DefaultGlassWidth_gt: String

  """All values greater than or equal the given value."""
  DefaultGlassWidth_gte: String

  """All values containing the given string."""
  DefaultGlassWidth_contains: String

  """All values not containing the given string."""
  DefaultGlassWidth_not_contains: String

  """All values starting with the given string."""
  DefaultGlassWidth_starts_with: String

  """All values not starting with the given string."""
  DefaultGlassWidth_not_starts_with: String

  """All values ending with the given string."""
  DefaultGlassWidth_ends_with: String

  """All values not ending with the given string."""
  DefaultGlassWidth_not_ends_with: String
  AbstractPrice: Int

  """All values that are not equal to given value."""
  AbstractPrice_not: Int

  """All values that are contained in given list."""
  AbstractPrice_in: [Int!]

  """All values that are not contained in given list."""
  AbstractPrice_not_in: [Int!]

  """All values less than the given value."""
  AbstractPrice_lt: Int

  """All values less than or equal the given value."""
  AbstractPrice_lte: Int

  """All values greater than the given value."""
  AbstractPrice_gt: Int

  """All values greater than or equal the given value."""
  AbstractPrice_gte: Int
  SOSPrice: Float

  """All values that are not equal to given value."""
  SOSPrice_not: Float

  """All values that are contained in given list."""
  SOSPrice_in: [Float!]

  """All values that are not contained in given list."""
  SOSPrice_not_in: [Float!]

  """All values less than the given value."""
  SOSPrice_lt: Float

  """All values less than or equal the given value."""
  SOSPrice_lte: Float

  """All values greater than the given value."""
  SOSPrice_gt: Float

  """All values greater than or equal the given value."""
  SOSPrice_gte: Float
  MDSPrice: Float

  """All values that are not equal to given value."""
  MDSPrice_not: Float

  """All values that are contained in given list."""
  MDSPrice_in: [Float!]

  """All values that are not contained in given list."""
  MDSPrice_not_in: [Float!]

  """All values less than the given value."""
  MDSPrice_lt: Float

  """All values less than or equal the given value."""
  MDSPrice_lte: Float

  """All values greater than the given value."""
  MDSPrice_gt: Float

  """All values greater than or equal the given value."""
  MDSPrice_gte: Float
  LowesStocked: Boolean

  """All values that are not equal to given value."""
  LowesStocked_not: Boolean
  GlassType: String

  """All values that are not equal to given value."""
  GlassType_not: String

  """All values that are contained in given list."""
  GlassType_in: [String!]

  """All values that are not contained in given list."""
  GlassType_not_in: [String!]

  """All values less than the given value."""
  GlassType_lt: String

  """All values less than or equal the given value."""
  GlassType_lte: String

  """All values greater than the given value."""
  GlassType_gt: String

  """All values greater than or equal the given value."""
  GlassType_gte: String

  """All values containing the given string."""
  GlassType_contains: String

  """All values not containing the given string."""
  GlassType_not_contains: String

  """All values starting with the given string."""
  GlassType_starts_with: String

  """All values not starting with the given string."""
  GlassType_not_starts_with: String

  """All values ending with the given string."""
  GlassType_ends_with: String

  """All values not ending with the given string."""
  GlassType_not_ends_with: String
  GlassDesign: String

  """All values that are not equal to given value."""
  GlassDesign_not: String

  """All values that are contained in given list."""
  GlassDesign_in: [String!]

  """All values that are not contained in given list."""
  GlassDesign_not_in: [String!]

  """All values less than the given value."""
  GlassDesign_lt: String

  """All values less than or equal the given value."""
  GlassDesign_lte: String

  """All values greater than the given value."""
  GlassDesign_gt: String

  """All values greater than or equal the given value."""
  GlassDesign_gte: String

  """All values containing the given string."""
  GlassDesign_contains: String

  """All values not containing the given string."""
  GlassDesign_not_contains: String

  """All values starting with the given string."""
  GlassDesign_starts_with: String

  """All values not starting with the given string."""
  GlassDesign_not_starts_with: String

  """All values ending with the given string."""
  GlassDesign_ends_with: String

  """All values not ending with the given string."""
  GlassDesign_not_ends_with: String
  DefaultImageName: String

  """All values that are not equal to given value."""
  DefaultImageName_not: String

  """All values that are contained in given list."""
  DefaultImageName_in: [String!]

  """All values that are not contained in given list."""
  DefaultImageName_not_in: [String!]

  """All values less than the given value."""
  DefaultImageName_lt: String

  """All values less than or equal the given value."""
  DefaultImageName_lte: String

  """All values greater than the given value."""
  DefaultImageName_gt: String

  """All values greater than or equal the given value."""
  DefaultImageName_gte: String

  """All values containing the given string."""
  DefaultImageName_contains: String

  """All values not containing the given string."""
  DefaultImageName_not_contains: String

  """All values starting with the given string."""
  DefaultImageName_starts_with: String

  """All values not starting with the given string."""
  DefaultImageName_not_starts_with: String

  """All values ending with the given string."""
  DefaultImageName_ends_with: String

  """All values not ending with the given string."""
  DefaultImageName_not_ends_with: String
  ImageUrl: String

  """All values that are not equal to given value."""
  ImageUrl_not: String

  """All values that are contained in given list."""
  ImageUrl_in: [String!]

  """All values that are not contained in given list."""
  ImageUrl_not_in: [String!]

  """All values less than the given value."""
  ImageUrl_lt: String

  """All values less than or equal the given value."""
  ImageUrl_lte: String

  """All values greater than the given value."""
  ImageUrl_gt: String

  """All values greater than or equal the given value."""
  ImageUrl_gte: String

  """All values containing the given string."""
  ImageUrl_contains: String

  """All values not containing the given string."""
  ImageUrl_not_contains: String

  """All values starting with the given string."""
  ImageUrl_starts_with: String

  """All values not starting with the given string."""
  ImageUrl_not_starts_with: String

  """All values ending with the given string."""
  ImageUrl_ends_with: String

  """All values not ending with the given string."""
  ImageUrl_not_ends_with: String
  Ordinal: Int

  """All values that are not equal to given value."""
  Ordinal_not: Int

  """All values that are contained in given list."""
  Ordinal_in: [Int!]

  """All values that are not contained in given list."""
  Ordinal_not_in: [Int!]

  """All values less than the given value."""
  Ordinal_lt: Int

  """All values less than or equal the given value."""
  Ordinal_lte: Int

  """All values greater than the given value."""
  Ordinal_gt: Int

  """All values greater than or equal the given value."""
  Ordinal_gte: Int
  GlassAssociation: String

  """All values that are not equal to given value."""
  GlassAssociation_not: String

  """All values that are contained in given list."""
  GlassAssociation_in: [String!]

  """All values that are not contained in given list."""
  GlassAssociation_not_in: [String!]

  """All values less than the given value."""
  GlassAssociation_lt: String

  """All values less than or equal the given value."""
  GlassAssociation_lte: String

  """All values greater than the given value."""
  GlassAssociation_gt: String

  """All values greater than or equal the given value."""
  GlassAssociation_gte: String

  """All values containing the given string."""
  GlassAssociation_contains: String

  """All values not containing the given string."""
  GlassAssociation_not_contains: String

  """All values starting with the given string."""
  GlassAssociation_starts_with: String

  """All values not starting with the given string."""
  GlassAssociation_not_starts_with: String

  """All values ending with the given string."""
  GlassAssociation_ends_with: String

  """All values not ending with the given string."""
  GlassAssociation_not_ends_with: String
  IsLimitedAvailability: Boolean

  """All values that are not equal to given value."""
  IsLimitedAvailability_not: Boolean
  ProductTrends: String

  """All values that are not equal to given value."""
  ProductTrends_not: String

  """All values that are contained in given list."""
  ProductTrends_in: [String!]

  """All values that are not contained in given list."""
  ProductTrends_not_in: [String!]

  """All values less than the given value."""
  ProductTrends_lt: String

  """All values less than or equal the given value."""
  ProductTrends_lte: String

  """All values greater than the given value."""
  ProductTrends_gt: String

  """All values greater than or equal the given value."""
  ProductTrends_gte: String

  """All values containing the given string."""
  ProductTrends_contains: String

  """All values not containing the given string."""
  ProductTrends_not_contains: String

  """All values starting with the given string."""
  ProductTrends_starts_with: String

  """All values not starting with the given string."""
  ProductTrends_not_starts_with: String

  """All values ending with the given string."""
  ProductTrends_ends_with: String

  """All values not ending with the given string."""
  ProductTrends_not_ends_with: String
  DefaultDoorSurroundStyleNumber: String

  """All values that are not equal to given value."""
  DefaultDoorSurroundStyleNumber_not: String

  """All values that are contained in given list."""
  DefaultDoorSurroundStyleNumber_in: [String!]

  """All values that are not contained in given list."""
  DefaultDoorSurroundStyleNumber_not_in: [String!]

  """All values less than the given value."""
  DefaultDoorSurroundStyleNumber_lt: String

  """All values less than or equal the given value."""
  DefaultDoorSurroundStyleNumber_lte: String

  """All values greater than the given value."""
  DefaultDoorSurroundStyleNumber_gt: String

  """All values greater than or equal the given value."""
  DefaultDoorSurroundStyleNumber_gte: String

  """All values containing the given string."""
  DefaultDoorSurroundStyleNumber_contains: String

  """All values not containing the given string."""
  DefaultDoorSurroundStyleNumber_not_contains: String

  """All values starting with the given string."""
  DefaultDoorSurroundStyleNumber_starts_with: String

  """All values not starting with the given string."""
  DefaultDoorSurroundStyleNumber_not_starts_with: String

  """All values ending with the given string."""
  DefaultDoorSurroundStyleNumber_ends_with: String

  """All values not ending with the given string."""
  DefaultDoorSurroundStyleNumber_not_ends_with: String
  GrainProfile: String

  """All values that are not equal to given value."""
  GrainProfile_not: String

  """All values that are contained in given list."""
  GrainProfile_in: [String!]

  """All values that are not contained in given list."""
  GrainProfile_not_in: [String!]

  """All values less than the given value."""
  GrainProfile_lt: String

  """All values less than or equal the given value."""
  GrainProfile_lte: String

  """All values greater than the given value."""
  GrainProfile_gt: String

  """All values greater than or equal the given value."""
  GrainProfile_gte: String

  """All values containing the given string."""
  GrainProfile_contains: String

  """All values not containing the given string."""
  GrainProfile_not_contains: String

  """All values starting with the given string."""
  GrainProfile_starts_with: String

  """All values not starting with the given string."""
  GrainProfile_not_starts_with: String

  """All values ending with the given string."""
  GrainProfile_ends_with: String

  """All values not ending with the given string."""
  GrainProfile_not_ends_with: String
  LydDisplay: Boolean

  """All values that are not equal to given value."""
  LydDisplay_not: Boolean
  LydDefaultFinishId: String

  """All values that are not equal to given value."""
  LydDefaultFinishId_not: String

  """All values that are contained in given list."""
  LydDefaultFinishId_in: [String!]

  """All values that are not contained in given list."""
  LydDefaultFinishId_not_in: [String!]

  """All values less than the given value."""
  LydDefaultFinishId_lt: String

  """All values less than or equal the given value."""
  LydDefaultFinishId_lte: String

  """All values greater than the given value."""
  LydDefaultFinishId_gt: String

  """All values greater than or equal the given value."""
  LydDefaultFinishId_gte: String

  """All values containing the given string."""
  LydDefaultFinishId_contains: String

  """All values not containing the given string."""
  LydDefaultFinishId_not_contains: String

  """All values starting with the given string."""
  LydDefaultFinishId_starts_with: String

  """All values not starting with the given string."""
  LydDefaultFinishId_not_starts_with: String

  """All values ending with the given string."""
  LydDefaultFinishId_ends_with: String

  """All values not ending with the given string."""
  LydDefaultFinishId_not_ends_with: String
  LydGlassCategory: String

  """All values that are not equal to given value."""
  LydGlassCategory_not: String

  """All values that are contained in given list."""
  LydGlassCategory_in: [String!]

  """All values that are not contained in given list."""
  LydGlassCategory_not_in: [String!]

  """All values less than the given value."""
  LydGlassCategory_lt: String

  """All values less than or equal the given value."""
  LydGlassCategory_lte: String

  """All values greater than the given value."""
  LydGlassCategory_gt: String

  """All values greater than or equal the given value."""
  LydGlassCategory_gte: String

  """All values containing the given string."""
  LydGlassCategory_contains: String

  """All values not containing the given string."""
  LydGlassCategory_not_contains: String

  """All values starting with the given string."""
  LydGlassCategory_starts_with: String

  """All values not starting with the given string."""
  LydGlassCategory_not_starts_with: String

  """All values ending with the given string."""
  LydGlassCategory_ends_with: String

  """All values not ending with the given string."""
  LydGlassCategory_not_ends_with: String
  LydDisplayOrder: Int

  """All values that are not equal to given value."""
  LydDisplayOrder_not: Int

  """All values that are contained in given list."""
  LydDisplayOrder_in: [Int!]

  """All values that are not contained in given list."""
  LydDisplayOrder_not_in: [Int!]

  """All values less than the given value."""
  LydDisplayOrder_lt: Int

  """All values less than or equal the given value."""
  LydDisplayOrder_lte: Int

  """All values greater than the given value."""
  LydDisplayOrder_gt: Int

  """All values greater than or equal the given value."""
  LydDisplayOrder_gte: Int
  LydDisplayCaming: String

  """All values that are not equal to given value."""
  LydDisplayCaming_not: String

  """All values that are contained in given list."""
  LydDisplayCaming_in: [String!]

  """All values that are not contained in given list."""
  LydDisplayCaming_not_in: [String!]

  """All values less than the given value."""
  LydDisplayCaming_lt: String

  """All values less than or equal the given value."""
  LydDisplayCaming_lte: String

  """All values greater than the given value."""
  LydDisplayCaming_gt: String

  """All values greater than or equal the given value."""
  LydDisplayCaming_gte: String

  """All values containing the given string."""
  LydDisplayCaming_contains: String

  """All values not containing the given string."""
  LydDisplayCaming_not_contains: String

  """All values starting with the given string."""
  LydDisplayCaming_starts_with: String

  """All values not starting with the given string."""
  LydDisplayCaming_not_starts_with: String

  """All values ending with the given string."""
  LydDisplayCaming_ends_with: String

  """All values not ending with the given string."""
  LydDisplayCaming_not_ends_with: String
  FacetMaterial: String

  """All values that are not equal to given value."""
  FacetMaterial_not: String

  """All values that are contained in given list."""
  FacetMaterial_in: [String!]

  """All values that are not contained in given list."""
  FacetMaterial_not_in: [String!]

  """All values less than the given value."""
  FacetMaterial_lt: String

  """All values less than or equal the given value."""
  FacetMaterial_lte: String

  """All values greater than the given value."""
  FacetMaterial_gt: String

  """All values greater than or equal the given value."""
  FacetMaterial_gte: String

  """All values containing the given string."""
  FacetMaterial_contains: String

  """All values not containing the given string."""
  FacetMaterial_not_contains: String

  """All values starting with the given string."""
  FacetMaterial_starts_with: String

  """All values not starting with the given string."""
  FacetMaterial_not_starts_with: String

  """All values ending with the given string."""
  FacetMaterial_ends_with: String

  """All values not ending with the given string."""
  FacetMaterial_not_ends_with: String
  FacetRecentlyLaunched: String

  """All values that are not equal to given value."""
  FacetRecentlyLaunched_not: String

  """All values that are contained in given list."""
  FacetRecentlyLaunched_in: [String!]

  """All values that are not contained in given list."""
  FacetRecentlyLaunched_not_in: [String!]

  """All values less than the given value."""
  FacetRecentlyLaunched_lt: String

  """All values less than or equal the given value."""
  FacetRecentlyLaunched_lte: String

  """All values greater than the given value."""
  FacetRecentlyLaunched_gt: String

  """All values greater than or equal the given value."""
  FacetRecentlyLaunched_gte: String

  """All values containing the given string."""
  FacetRecentlyLaunched_contains: String

  """All values not containing the given string."""
  FacetRecentlyLaunched_not_contains: String

  """All values starting with the given string."""
  FacetRecentlyLaunched_starts_with: String

  """All values not starting with the given string."""
  FacetRecentlyLaunched_not_starts_with: String

  """All values ending with the given string."""
  FacetRecentlyLaunched_ends_with: String

  """All values not ending with the given string."""
  FacetRecentlyLaunched_not_ends_with: String
  RelatedStyleID: String

  """All values that are not equal to given value."""
  RelatedStyleID_not: String

  """All values that are contained in given list."""
  RelatedStyleID_in: [String!]

  """All values that are not contained in given list."""
  RelatedStyleID_not_in: [String!]

  """All values less than the given value."""
  RelatedStyleID_lt: String

  """All values less than or equal the given value."""
  RelatedStyleID_lte: String

  """All values greater than the given value."""
  RelatedStyleID_gt: String

  """All values greater than or equal the given value."""
  RelatedStyleID_gte: String

  """All values containing the given string."""
  RelatedStyleID_contains: String

  """All values not containing the given string."""
  RelatedStyleID_not_contains: String

  """All values starting with the given string."""
  RelatedStyleID_starts_with: String

  """All values not starting with the given string."""
  RelatedStyleID_not_starts_with: String

  """All values ending with the given string."""
  RelatedStyleID_ends_with: String

  """All values not ending with the given string."""
  RelatedStyleID_not_ends_with: String
  AllowsHandlesets: Boolean

  """All values that are not equal to given value."""
  AllowsHandlesets_not: Boolean
  IsFlushGlazed: Boolean

  """All values that are not equal to given value."""
  IsFlushGlazed_not: Boolean
  DoorCollection: DoorCollectionWhereInput
  DoorLine: DoorLineWhereInput
  FrameProfiles_every: FrameProfilesWhereInput
  FrameProfiles_some: FrameProfilesWhereInput
  FrameProfiles_none: FrameProfilesWhereInput
  DefaultFrameProfile: FrameProfilesWhereInput
  StyleShape: StyleShapeWhereInput
  StyleLayoutPairs: StyleLayoutPairsWhereInput
  Sidelites_every: SidelitesWhereInput
  Sidelites_some: SidelitesWhereInput
  Sidelites_none: SidelitesWhereInput
}

input DoorWhereUniqueInput {
  Id: ID
}

type FrameProfiles {
  Id: ID!
  Abbreviation: String!
  Name: String
  ImgURL: String
  DoorCollectionAbbreviation: String
  StyleShapeAbbreviation: String
  Doors(where: DoorWhereInput, orderBy: DoorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Door!]
}

"""A connection to a list of items."""
type FrameProfilesConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [FrameProfilesEdge]!
  aggregate: AggregateFrameProfiles!
}

input FrameProfilesCreateInput {
  Id: ID
  Abbreviation: String!
  Name: String
  ImgURL: String
  DoorCollectionAbbreviation: String
  StyleShapeAbbreviation: String
  Doors: DoorCreateManyWithoutFrameProfilesInput
}

input FrameProfilesCreateManyWithoutDoorsInput {
  create: [FrameProfilesCreateWithoutDoorsInput!]
  connect: [FrameProfilesWhereUniqueInput!]
}

input FrameProfilesCreateOneInput {
  create: FrameProfilesCreateInput
  connect: FrameProfilesWhereUniqueInput
}

input FrameProfilesCreateWithoutDoorsInput {
  Id: ID
  Abbreviation: String!
  Name: String
  ImgURL: String
  DoorCollectionAbbreviation: String
  StyleShapeAbbreviation: String
}

"""An edge in a connection."""
type FrameProfilesEdge {
  """The item at the end of the edge."""
  node: FrameProfiles!

  """A cursor for use in pagination."""
  cursor: String!
}

enum FrameProfilesOrderByInput {
  Id_ASC
  Id_DESC
  Abbreviation_ASC
  Abbreviation_DESC
  Name_ASC
  Name_DESC
  ImgURL_ASC
  ImgURL_DESC
  DoorCollectionAbbreviation_ASC
  DoorCollectionAbbreviation_DESC
  StyleShapeAbbreviation_ASC
  StyleShapeAbbreviation_DESC
}

type FrameProfilesPreviousValues {
  Id: ID!
  Abbreviation: String!
  Name: String
  ImgURL: String
  DoorCollectionAbbreviation: String
  StyleShapeAbbreviation: String
}

input FrameProfilesScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [FrameProfilesScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [FrameProfilesScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FrameProfilesScalarWhereInput!]
  Id: ID

  """All values that are not equal to given value."""
  Id_not: ID

  """All values that are contained in given list."""
  Id_in: [ID!]

  """All values that are not contained in given list."""
  Id_not_in: [ID!]

  """All values less than the given value."""
  Id_lt: ID

  """All values less than or equal the given value."""
  Id_lte: ID

  """All values greater than the given value."""
  Id_gt: ID

  """All values greater than or equal the given value."""
  Id_gte: ID

  """All values containing the given string."""
  Id_contains: ID

  """All values not containing the given string."""
  Id_not_contains: ID

  """All values starting with the given string."""
  Id_starts_with: ID

  """All values not starting with the given string."""
  Id_not_starts_with: ID

  """All values ending with the given string."""
  Id_ends_with: ID

  """All values not ending with the given string."""
  Id_not_ends_with: ID
  Abbreviation: String

  """All values that are not equal to given value."""
  Abbreviation_not: String

  """All values that are contained in given list."""
  Abbreviation_in: [String!]

  """All values that are not contained in given list."""
  Abbreviation_not_in: [String!]

  """All values less than the given value."""
  Abbreviation_lt: String

  """All values less than or equal the given value."""
  Abbreviation_lte: String

  """All values greater than the given value."""
  Abbreviation_gt: String

  """All values greater than or equal the given value."""
  Abbreviation_gte: String

  """All values containing the given string."""
  Abbreviation_contains: String

  """All values not containing the given string."""
  Abbreviation_not_contains: String

  """All values starting with the given string."""
  Abbreviation_starts_with: String

  """All values not starting with the given string."""
  Abbreviation_not_starts_with: String

  """All values ending with the given string."""
  Abbreviation_ends_with: String

  """All values not ending with the given string."""
  Abbreviation_not_ends_with: String
  Name: String

  """All values that are not equal to given value."""
  Name_not: String

  """All values that are contained in given list."""
  Name_in: [String!]

  """All values that are not contained in given list."""
  Name_not_in: [String!]

  """All values less than the given value."""
  Name_lt: String

  """All values less than or equal the given value."""
  Name_lte: String

  """All values greater than the given value."""
  Name_gt: String

  """All values greater than or equal the given value."""
  Name_gte: String

  """All values containing the given string."""
  Name_contains: String

  """All values not containing the given string."""
  Name_not_contains: String

  """All values starting with the given string."""
  Name_starts_with: String

  """All values not starting with the given string."""
  Name_not_starts_with: String

  """All values ending with the given string."""
  Name_ends_with: String

  """All values not ending with the given string."""
  Name_not_ends_with: String
  ImgURL: String

  """All values that are not equal to given value."""
  ImgURL_not: String

  """All values that are contained in given list."""
  ImgURL_in: [String!]

  """All values that are not contained in given list."""
  ImgURL_not_in: [String!]

  """All values less than the given value."""
  ImgURL_lt: String

  """All values less than or equal the given value."""
  ImgURL_lte: String

  """All values greater than the given value."""
  ImgURL_gt: String

  """All values greater than or equal the given value."""
  ImgURL_gte: String

  """All values containing the given string."""
  ImgURL_contains: String

  """All values not containing the given string."""
  ImgURL_not_contains: String

  """All values starting with the given string."""
  ImgURL_starts_with: String

  """All values not starting with the given string."""
  ImgURL_not_starts_with: String

  """All values ending with the given string."""
  ImgURL_ends_with: String

  """All values not ending with the given string."""
  ImgURL_not_ends_with: String
  DoorCollectionAbbreviation: String

  """All values that are not equal to given value."""
  DoorCollectionAbbreviation_not: String

  """All values that are contained in given list."""
  DoorCollectionAbbreviation_in: [String!]

  """All values that are not contained in given list."""
  DoorCollectionAbbreviation_not_in: [String!]

  """All values less than the given value."""
  DoorCollectionAbbreviation_lt: String

  """All values less than or equal the given value."""
  DoorCollectionAbbreviation_lte: String

  """All values greater than the given value."""
  DoorCollectionAbbreviation_gt: String

  """All values greater than or equal the given value."""
  DoorCollectionAbbreviation_gte: String

  """All values containing the given string."""
  DoorCollectionAbbreviation_contains: String

  """All values not containing the given string."""
  DoorCollectionAbbreviation_not_contains: String

  """All values starting with the given string."""
  DoorCollectionAbbreviation_starts_with: String

  """All values not starting with the given string."""
  DoorCollectionAbbreviation_not_starts_with: String

  """All values ending with the given string."""
  DoorCollectionAbbreviation_ends_with: String

  """All values not ending with the given string."""
  DoorCollectionAbbreviation_not_ends_with: String
  StyleShapeAbbreviation: String

  """All values that are not equal to given value."""
  StyleShapeAbbreviation_not: String

  """All values that are contained in given list."""
  StyleShapeAbbreviation_in: [String!]

  """All values that are not contained in given list."""
  StyleShapeAbbreviation_not_in: [String!]

  """All values less than the given value."""
  StyleShapeAbbreviation_lt: String

  """All values less than or equal the given value."""
  StyleShapeAbbreviation_lte: String

  """All values greater than the given value."""
  StyleShapeAbbreviation_gt: String

  """All values greater than or equal the given value."""
  StyleShapeAbbreviation_gte: String

  """All values containing the given string."""
  StyleShapeAbbreviation_contains: String

  """All values not containing the given string."""
  StyleShapeAbbreviation_not_contains: String

  """All values starting with the given string."""
  StyleShapeAbbreviation_starts_with: String

  """All values not starting with the given string."""
  StyleShapeAbbreviation_not_starts_with: String

  """All values ending with the given string."""
  StyleShapeAbbreviation_ends_with: String

  """All values not ending with the given string."""
  StyleShapeAbbreviation_not_ends_with: String
}

type FrameProfilesSubscriptionPayload {
  mutation: MutationType!
  node: FrameProfiles
  updatedFields: [String!]
  previousValues: FrameProfilesPreviousValues
}

input FrameProfilesSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [FrameProfilesSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [FrameProfilesSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FrameProfilesSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: FrameProfilesWhereInput
}

input FrameProfilesUpdateDataInput {
  Abbreviation: String
  Name: String
  ImgURL: String
  DoorCollectionAbbreviation: String
  StyleShapeAbbreviation: String
  Doors: DoorUpdateManyWithoutFrameProfilesInput
}

input FrameProfilesUpdateInput {
  Abbreviation: String
  Name: String
  ImgURL: String
  DoorCollectionAbbreviation: String
  StyleShapeAbbreviation: String
  Doors: DoorUpdateManyWithoutFrameProfilesInput
}

input FrameProfilesUpdateManyDataInput {
  Abbreviation: String
  Name: String
  ImgURL: String
  DoorCollectionAbbreviation: String
  StyleShapeAbbreviation: String
}

input FrameProfilesUpdateManyMutationInput {
  Abbreviation: String
  Name: String
  ImgURL: String
  DoorCollectionAbbreviation: String
  StyleShapeAbbreviation: String
}

input FrameProfilesUpdateManyWithoutDoorsInput {
  create: [FrameProfilesCreateWithoutDoorsInput!]
  connect: [FrameProfilesWhereUniqueInput!]
  set: [FrameProfilesWhereUniqueInput!]
  disconnect: [FrameProfilesWhereUniqueInput!]
  delete: [FrameProfilesWhereUniqueInput!]
  update: [FrameProfilesUpdateWithWhereUniqueWithoutDoorsInput!]
  updateMany: [FrameProfilesUpdateManyWithWhereNestedInput!]
  deleteMany: [FrameProfilesScalarWhereInput!]
  upsert: [FrameProfilesUpsertWithWhereUniqueWithoutDoorsInput!]
}

input FrameProfilesUpdateManyWithWhereNestedInput {
  where: FrameProfilesScalarWhereInput!
  data: FrameProfilesUpdateManyDataInput!
}

input FrameProfilesUpdateOneInput {
  create: FrameProfilesCreateInput
  connect: FrameProfilesWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: FrameProfilesUpdateDataInput
  upsert: FrameProfilesUpsertNestedInput
}

input FrameProfilesUpdateWithoutDoorsDataInput {
  Abbreviation: String
  Name: String
  ImgURL: String
  DoorCollectionAbbreviation: String
  StyleShapeAbbreviation: String
}

input FrameProfilesUpdateWithWhereUniqueWithoutDoorsInput {
  where: FrameProfilesWhereUniqueInput!
  data: FrameProfilesUpdateWithoutDoorsDataInput!
}

input FrameProfilesUpsertNestedInput {
  update: FrameProfilesUpdateDataInput!
  create: FrameProfilesCreateInput!
}

input FrameProfilesUpsertWithWhereUniqueWithoutDoorsInput {
  where: FrameProfilesWhereUniqueInput!
  update: FrameProfilesUpdateWithoutDoorsDataInput!
  create: FrameProfilesCreateWithoutDoorsInput!
}

input FrameProfilesWhereInput {
  """Logical AND on all given filters."""
  AND: [FrameProfilesWhereInput!]

  """Logical OR on all given filters."""
  OR: [FrameProfilesWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [FrameProfilesWhereInput!]
  Id: ID

  """All values that are not equal to given value."""
  Id_not: ID

  """All values that are contained in given list."""
  Id_in: [ID!]

  """All values that are not contained in given list."""
  Id_not_in: [ID!]

  """All values less than the given value."""
  Id_lt: ID

  """All values less than or equal the given value."""
  Id_lte: ID

  """All values greater than the given value."""
  Id_gt: ID

  """All values greater than or equal the given value."""
  Id_gte: ID

  """All values containing the given string."""
  Id_contains: ID

  """All values not containing the given string."""
  Id_not_contains: ID

  """All values starting with the given string."""
  Id_starts_with: ID

  """All values not starting with the given string."""
  Id_not_starts_with: ID

  """All values ending with the given string."""
  Id_ends_with: ID

  """All values not ending with the given string."""
  Id_not_ends_with: ID
  Abbreviation: String

  """All values that are not equal to given value."""
  Abbreviation_not: String

  """All values that are contained in given list."""
  Abbreviation_in: [String!]

  """All values that are not contained in given list."""
  Abbreviation_not_in: [String!]

  """All values less than the given value."""
  Abbreviation_lt: String

  """All values less than or equal the given value."""
  Abbreviation_lte: String

  """All values greater than the given value."""
  Abbreviation_gt: String

  """All values greater than or equal the given value."""
  Abbreviation_gte: String

  """All values containing the given string."""
  Abbreviation_contains: String

  """All values not containing the given string."""
  Abbreviation_not_contains: String

  """All values starting with the given string."""
  Abbreviation_starts_with: String

  """All values not starting with the given string."""
  Abbreviation_not_starts_with: String

  """All values ending with the given string."""
  Abbreviation_ends_with: String

  """All values not ending with the given string."""
  Abbreviation_not_ends_with: String
  Name: String

  """All values that are not equal to given value."""
  Name_not: String

  """All values that are contained in given list."""
  Name_in: [String!]

  """All values that are not contained in given list."""
  Name_not_in: [String!]

  """All values less than the given value."""
  Name_lt: String

  """All values less than or equal the given value."""
  Name_lte: String

  """All values greater than the given value."""
  Name_gt: String

  """All values greater than or equal the given value."""
  Name_gte: String

  """All values containing the given string."""
  Name_contains: String

  """All values not containing the given string."""
  Name_not_contains: String

  """All values starting with the given string."""
  Name_starts_with: String

  """All values not starting with the given string."""
  Name_not_starts_with: String

  """All values ending with the given string."""
  Name_ends_with: String

  """All values not ending with the given string."""
  Name_not_ends_with: String
  ImgURL: String

  """All values that are not equal to given value."""
  ImgURL_not: String

  """All values that are contained in given list."""
  ImgURL_in: [String!]

  """All values that are not contained in given list."""
  ImgURL_not_in: [String!]

  """All values less than the given value."""
  ImgURL_lt: String

  """All values less than or equal the given value."""
  ImgURL_lte: String

  """All values greater than the given value."""
  ImgURL_gt: String

  """All values greater than or equal the given value."""
  ImgURL_gte: String

  """All values containing the given string."""
  ImgURL_contains: String

  """All values not containing the given string."""
  ImgURL_not_contains: String

  """All values starting with the given string."""
  ImgURL_starts_with: String

  """All values not starting with the given string."""
  ImgURL_not_starts_with: String

  """All values ending with the given string."""
  ImgURL_ends_with: String

  """All values not ending with the given string."""
  ImgURL_not_ends_with: String
  DoorCollectionAbbreviation: String

  """All values that are not equal to given value."""
  DoorCollectionAbbreviation_not: String

  """All values that are contained in given list."""
  DoorCollectionAbbreviation_in: [String!]

  """All values that are not contained in given list."""
  DoorCollectionAbbreviation_not_in: [String!]

  """All values less than the given value."""
  DoorCollectionAbbreviation_lt: String

  """All values less than or equal the given value."""
  DoorCollectionAbbreviation_lte: String

  """All values greater than the given value."""
  DoorCollectionAbbreviation_gt: String

  """All values greater than or equal the given value."""
  DoorCollectionAbbreviation_gte: String

  """All values containing the given string."""
  DoorCollectionAbbreviation_contains: String

  """All values not containing the given string."""
  DoorCollectionAbbreviation_not_contains: String

  """All values starting with the given string."""
  DoorCollectionAbbreviation_starts_with: String

  """All values not starting with the given string."""
  DoorCollectionAbbreviation_not_starts_with: String

  """All values ending with the given string."""
  DoorCollectionAbbreviation_ends_with: String

  """All values not ending with the given string."""
  DoorCollectionAbbreviation_not_ends_with: String
  StyleShapeAbbreviation: String

  """All values that are not equal to given value."""
  StyleShapeAbbreviation_not: String

  """All values that are contained in given list."""
  StyleShapeAbbreviation_in: [String!]

  """All values that are not contained in given list."""
  StyleShapeAbbreviation_not_in: [String!]

  """All values less than the given value."""
  StyleShapeAbbreviation_lt: String

  """All values less than or equal the given value."""
  StyleShapeAbbreviation_lte: String

  """All values greater than the given value."""
  StyleShapeAbbreviation_gt: String

  """All values greater than or equal the given value."""
  StyleShapeAbbreviation_gte: String

  """All values containing the given string."""
  StyleShapeAbbreviation_contains: String

  """All values not containing the given string."""
  StyleShapeAbbreviation_not_contains: String

  """All values starting with the given string."""
  StyleShapeAbbreviation_starts_with: String

  """All values not starting with the given string."""
  StyleShapeAbbreviation_not_starts_with: String

  """All values ending with the given string."""
  StyleShapeAbbreviation_ends_with: String

  """All values not ending with the given string."""
  StyleShapeAbbreviation_not_ends_with: String
  Doors_every: DoorWhereInput
  Doors_some: DoorWhereInput
  Doors_none: DoorWhereInput
}

input FrameProfilesWhereUniqueInput {
  Id: ID
  Abbreviation: String
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createDoor(data: DoorCreateInput!): Door!
  createDoorCollection(data: DoorCollectionCreateInput!): DoorCollection!
  createDoorLine(data: DoorLineCreateInput!): DoorLine!
  createStyleShape(data: StyleShapeCreateInput!): StyleShape!
  createSidelites(data: SidelitesCreateInput!): Sidelites!
  createStyleLayoutPairs(data: StyleLayoutPairsCreateInput!): StyleLayoutPairs!
  createFrameProfiles(data: FrameProfilesCreateInput!): FrameProfiles!
  updateDoor(data: DoorUpdateInput!, where: DoorWhereUniqueInput!): Door
  updateDoorCollection(data: DoorCollectionUpdateInput!, where: DoorCollectionWhereUniqueInput!): DoorCollection
  updateDoorLine(data: DoorLineUpdateInput!, where: DoorLineWhereUniqueInput!): DoorLine
  updateStyleShape(data: StyleShapeUpdateInput!, where: StyleShapeWhereUniqueInput!): StyleShape
  updateSidelites(data: SidelitesUpdateInput!, where: SidelitesWhereUniqueInput!): Sidelites
  updateStyleLayoutPairs(data: StyleLayoutPairsUpdateInput!, where: StyleLayoutPairsWhereUniqueInput!): StyleLayoutPairs
  updateFrameProfiles(data: FrameProfilesUpdateInput!, where: FrameProfilesWhereUniqueInput!): FrameProfiles
  deleteDoor(where: DoorWhereUniqueInput!): Door
  deleteDoorCollection(where: DoorCollectionWhereUniqueInput!): DoorCollection
  deleteDoorLine(where: DoorLineWhereUniqueInput!): DoorLine
  deleteStyleShape(where: StyleShapeWhereUniqueInput!): StyleShape
  deleteSidelites(where: SidelitesWhereUniqueInput!): Sidelites
  deleteStyleLayoutPairs(where: StyleLayoutPairsWhereUniqueInput!): StyleLayoutPairs
  deleteFrameProfiles(where: FrameProfilesWhereUniqueInput!): FrameProfiles
  upsertDoor(where: DoorWhereUniqueInput!, create: DoorCreateInput!, update: DoorUpdateInput!): Door!
  upsertDoorCollection(where: DoorCollectionWhereUniqueInput!, create: DoorCollectionCreateInput!, update: DoorCollectionUpdateInput!): DoorCollection!
  upsertDoorLine(where: DoorLineWhereUniqueInput!, create: DoorLineCreateInput!, update: DoorLineUpdateInput!): DoorLine!
  upsertStyleShape(where: StyleShapeWhereUniqueInput!, create: StyleShapeCreateInput!, update: StyleShapeUpdateInput!): StyleShape!
  upsertSidelites(where: SidelitesWhereUniqueInput!, create: SidelitesCreateInput!, update: SidelitesUpdateInput!): Sidelites!
  upsertStyleLayoutPairs(where: StyleLayoutPairsWhereUniqueInput!, create: StyleLayoutPairsCreateInput!, update: StyleLayoutPairsUpdateInput!): StyleLayoutPairs!
  upsertFrameProfiles(where: FrameProfilesWhereUniqueInput!, create: FrameProfilesCreateInput!, update: FrameProfilesUpdateInput!): FrameProfiles!
  updateManyDoors(data: DoorUpdateManyMutationInput!, where: DoorWhereInput): BatchPayload!
  updateManyDoorCollections(data: DoorCollectionUpdateManyMutationInput!, where: DoorCollectionWhereInput): BatchPayload!
  updateManyDoorLines(data: DoorLineUpdateManyMutationInput!, where: DoorLineWhereInput): BatchPayload!
  updateManyStyleShapes(data: StyleShapeUpdateManyMutationInput!, where: StyleShapeWhereInput): BatchPayload!
  updateManySideliteses(data: SidelitesUpdateManyMutationInput!, where: SidelitesWhereInput): BatchPayload!
  updateManyStyleLayoutPairses(data: StyleLayoutPairsUpdateManyMutationInput!, where: StyleLayoutPairsWhereInput): BatchPayload!
  updateManyFrameProfileses(data: FrameProfilesUpdateManyMutationInput!, where: FrameProfilesWhereInput): BatchPayload!
  deleteManyDoors(where: DoorWhereInput): BatchPayload!
  deleteManyDoorCollections(where: DoorCollectionWhereInput): BatchPayload!
  deleteManyDoorLines(where: DoorLineWhereInput): BatchPayload!
  deleteManyStyleShapes(where: StyleShapeWhereInput): BatchPayload!
  deleteManySideliteses(where: SidelitesWhereInput): BatchPayload!
  deleteManyStyleLayoutPairses(where: StyleLayoutPairsWhereInput): BatchPayload!
  deleteManyFrameProfileses(where: FrameProfilesWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  doors(where: DoorWhereInput, orderBy: DoorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Door]!
  doorCollections(where: DoorCollectionWhereInput, orderBy: DoorCollectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DoorCollection]!
  doorLines(where: DoorLineWhereInput, orderBy: DoorLineOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DoorLine]!
  styleShapes(where: StyleShapeWhereInput, orderBy: StyleShapeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [StyleShape]!
  sideliteses(where: SidelitesWhereInput, orderBy: SidelitesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Sidelites]!
  styleLayoutPairses(where: StyleLayoutPairsWhereInput, orderBy: StyleLayoutPairsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [StyleLayoutPairs]!
  frameProfileses(where: FrameProfilesWhereInput, orderBy: FrameProfilesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [FrameProfiles]!
  door(where: DoorWhereUniqueInput!): Door
  doorCollection(where: DoorCollectionWhereUniqueInput!): DoorCollection
  doorLine(where: DoorLineWhereUniqueInput!): DoorLine
  styleShape(where: StyleShapeWhereUniqueInput!): StyleShape
  sidelites(where: SidelitesWhereUniqueInput!): Sidelites
  styleLayoutPairs(where: StyleLayoutPairsWhereUniqueInput!): StyleLayoutPairs
  frameProfiles(where: FrameProfilesWhereUniqueInput!): FrameProfiles
  doorsConnection(where: DoorWhereInput, orderBy: DoorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DoorConnection!
  doorCollectionsConnection(where: DoorCollectionWhereInput, orderBy: DoorCollectionOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DoorCollectionConnection!
  doorLinesConnection(where: DoorLineWhereInput, orderBy: DoorLineOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DoorLineConnection!
  styleShapesConnection(where: StyleShapeWhereInput, orderBy: StyleShapeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StyleShapeConnection!
  sidelitesesConnection(where: SidelitesWhereInput, orderBy: SidelitesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SidelitesConnection!
  styleLayoutPairsesConnection(where: StyleLayoutPairsWhereInput, orderBy: StyleLayoutPairsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StyleLayoutPairsConnection!
  frameProfilesesConnection(where: FrameProfilesWhereInput, orderBy: FrameProfilesOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): FrameProfilesConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Sidelites {
  Id: ID!
  DoorType: String
  ReferencedByStyleNumbers: [String!]!
  StyleNumber: String!
  DefaultImageName: String
  VisualizedWidth: Int
  ImageUrl: String
  Doors(where: DoorWhereInput, orderBy: DoorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Door!]
}

"""A connection to a list of items."""
type SidelitesConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SidelitesEdge]!
  aggregate: AggregateSidelites!
}

input SidelitesCreateInput {
  Id: ID
  DoorType: String
  StyleNumber: String!
  DefaultImageName: String
  VisualizedWidth: Int
  ImageUrl: String
  ReferencedByStyleNumbers: SidelitesCreateReferencedByStyleNumbersInput
  Doors: DoorCreateManyWithoutSidelitesInput
}

input SidelitesCreateManyWithoutDoorsInput {
  create: [SidelitesCreateWithoutDoorsInput!]
  connect: [SidelitesWhereUniqueInput!]
}

input SidelitesCreateReferencedByStyleNumbersInput {
  set: [String!]
}

input SidelitesCreateWithoutDoorsInput {
  Id: ID
  DoorType: String
  StyleNumber: String!
  DefaultImageName: String
  VisualizedWidth: Int
  ImageUrl: String
  ReferencedByStyleNumbers: SidelitesCreateReferencedByStyleNumbersInput
}

"""An edge in a connection."""
type SidelitesEdge {
  """The item at the end of the edge."""
  node: Sidelites!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SidelitesOrderByInput {
  Id_ASC
  Id_DESC
  DoorType_ASC
  DoorType_DESC
  StyleNumber_ASC
  StyleNumber_DESC
  DefaultImageName_ASC
  DefaultImageName_DESC
  VisualizedWidth_ASC
  VisualizedWidth_DESC
  ImageUrl_ASC
  ImageUrl_DESC
}

type SidelitesPreviousValues {
  Id: ID!
  DoorType: String
  ReferencedByStyleNumbers: [String!]!
  StyleNumber: String!
  DefaultImageName: String
  VisualizedWidth: Int
  ImageUrl: String
}

input SidelitesScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [SidelitesScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [SidelitesScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SidelitesScalarWhereInput!]
  Id: ID

  """All values that are not equal to given value."""
  Id_not: ID

  """All values that are contained in given list."""
  Id_in: [ID!]

  """All values that are not contained in given list."""
  Id_not_in: [ID!]

  """All values less than the given value."""
  Id_lt: ID

  """All values less than or equal the given value."""
  Id_lte: ID

  """All values greater than the given value."""
  Id_gt: ID

  """All values greater than or equal the given value."""
  Id_gte: ID

  """All values containing the given string."""
  Id_contains: ID

  """All values not containing the given string."""
  Id_not_contains: ID

  """All values starting with the given string."""
  Id_starts_with: ID

  """All values not starting with the given string."""
  Id_not_starts_with: ID

  """All values ending with the given string."""
  Id_ends_with: ID

  """All values not ending with the given string."""
  Id_not_ends_with: ID
  DoorType: String

  """All values that are not equal to given value."""
  DoorType_not: String

  """All values that are contained in given list."""
  DoorType_in: [String!]

  """All values that are not contained in given list."""
  DoorType_not_in: [String!]

  """All values less than the given value."""
  DoorType_lt: String

  """All values less than or equal the given value."""
  DoorType_lte: String

  """All values greater than the given value."""
  DoorType_gt: String

  """All values greater than or equal the given value."""
  DoorType_gte: String

  """All values containing the given string."""
  DoorType_contains: String

  """All values not containing the given string."""
  DoorType_not_contains: String

  """All values starting with the given string."""
  DoorType_starts_with: String

  """All values not starting with the given string."""
  DoorType_not_starts_with: String

  """All values ending with the given string."""
  DoorType_ends_with: String

  """All values not ending with the given string."""
  DoorType_not_ends_with: String
  StyleNumber: String

  """All values that are not equal to given value."""
  StyleNumber_not: String

  """All values that are contained in given list."""
  StyleNumber_in: [String!]

  """All values that are not contained in given list."""
  StyleNumber_not_in: [String!]

  """All values less than the given value."""
  StyleNumber_lt: String

  """All values less than or equal the given value."""
  StyleNumber_lte: String

  """All values greater than the given value."""
  StyleNumber_gt: String

  """All values greater than or equal the given value."""
  StyleNumber_gte: String

  """All values containing the given string."""
  StyleNumber_contains: String

  """All values not containing the given string."""
  StyleNumber_not_contains: String

  """All values starting with the given string."""
  StyleNumber_starts_with: String

  """All values not starting with the given string."""
  StyleNumber_not_starts_with: String

  """All values ending with the given string."""
  StyleNumber_ends_with: String

  """All values not ending with the given string."""
  StyleNumber_not_ends_with: String
  DefaultImageName: String

  """All values that are not equal to given value."""
  DefaultImageName_not: String

  """All values that are contained in given list."""
  DefaultImageName_in: [String!]

  """All values that are not contained in given list."""
  DefaultImageName_not_in: [String!]

  """All values less than the given value."""
  DefaultImageName_lt: String

  """All values less than or equal the given value."""
  DefaultImageName_lte: String

  """All values greater than the given value."""
  DefaultImageName_gt: String

  """All values greater than or equal the given value."""
  DefaultImageName_gte: String

  """All values containing the given string."""
  DefaultImageName_contains: String

  """All values not containing the given string."""
  DefaultImageName_not_contains: String

  """All values starting with the given string."""
  DefaultImageName_starts_with: String

  """All values not starting with the given string."""
  DefaultImageName_not_starts_with: String

  """All values ending with the given string."""
  DefaultImageName_ends_with: String

  """All values not ending with the given string."""
  DefaultImageName_not_ends_with: String
  VisualizedWidth: Int

  """All values that are not equal to given value."""
  VisualizedWidth_not: Int

  """All values that are contained in given list."""
  VisualizedWidth_in: [Int!]

  """All values that are not contained in given list."""
  VisualizedWidth_not_in: [Int!]

  """All values less than the given value."""
  VisualizedWidth_lt: Int

  """All values less than or equal the given value."""
  VisualizedWidth_lte: Int

  """All values greater than the given value."""
  VisualizedWidth_gt: Int

  """All values greater than or equal the given value."""
  VisualizedWidth_gte: Int
  ImageUrl: String

  """All values that are not equal to given value."""
  ImageUrl_not: String

  """All values that are contained in given list."""
  ImageUrl_in: [String!]

  """All values that are not contained in given list."""
  ImageUrl_not_in: [String!]

  """All values less than the given value."""
  ImageUrl_lt: String

  """All values less than or equal the given value."""
  ImageUrl_lte: String

  """All values greater than the given value."""
  ImageUrl_gt: String

  """All values greater than or equal the given value."""
  ImageUrl_gte: String

  """All values containing the given string."""
  ImageUrl_contains: String

  """All values not containing the given string."""
  ImageUrl_not_contains: String

  """All values starting with the given string."""
  ImageUrl_starts_with: String

  """All values not starting with the given string."""
  ImageUrl_not_starts_with: String

  """All values ending with the given string."""
  ImageUrl_ends_with: String

  """All values not ending with the given string."""
  ImageUrl_not_ends_with: String
}

type SidelitesSubscriptionPayload {
  mutation: MutationType!
  node: Sidelites
  updatedFields: [String!]
  previousValues: SidelitesPreviousValues
}

input SidelitesSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SidelitesSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SidelitesSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SidelitesSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SidelitesWhereInput
}

input SidelitesUpdateInput {
  DoorType: String
  StyleNumber: String
  DefaultImageName: String
  VisualizedWidth: Int
  ImageUrl: String
  ReferencedByStyleNumbers: SidelitesUpdateReferencedByStyleNumbersInput
  Doors: DoorUpdateManyWithoutSidelitesInput
}

input SidelitesUpdateManyDataInput {
  DoorType: String
  StyleNumber: String
  DefaultImageName: String
  VisualizedWidth: Int
  ImageUrl: String
  ReferencedByStyleNumbers: SidelitesUpdateReferencedByStyleNumbersInput
}

input SidelitesUpdateManyMutationInput {
  DoorType: String
  StyleNumber: String
  DefaultImageName: String
  VisualizedWidth: Int
  ImageUrl: String
  ReferencedByStyleNumbers: SidelitesUpdateReferencedByStyleNumbersInput
}

input SidelitesUpdateManyWithoutDoorsInput {
  create: [SidelitesCreateWithoutDoorsInput!]
  connect: [SidelitesWhereUniqueInput!]
  set: [SidelitesWhereUniqueInput!]
  disconnect: [SidelitesWhereUniqueInput!]
  delete: [SidelitesWhereUniqueInput!]
  update: [SidelitesUpdateWithWhereUniqueWithoutDoorsInput!]
  updateMany: [SidelitesUpdateManyWithWhereNestedInput!]
  deleteMany: [SidelitesScalarWhereInput!]
  upsert: [SidelitesUpsertWithWhereUniqueWithoutDoorsInput!]
}

input SidelitesUpdateManyWithWhereNestedInput {
  where: SidelitesScalarWhereInput!
  data: SidelitesUpdateManyDataInput!
}

input SidelitesUpdateReferencedByStyleNumbersInput {
  set: [String!]
}

input SidelitesUpdateWithoutDoorsDataInput {
  DoorType: String
  StyleNumber: String
  DefaultImageName: String
  VisualizedWidth: Int
  ImageUrl: String
  ReferencedByStyleNumbers: SidelitesUpdateReferencedByStyleNumbersInput
}

input SidelitesUpdateWithWhereUniqueWithoutDoorsInput {
  where: SidelitesWhereUniqueInput!
  data: SidelitesUpdateWithoutDoorsDataInput!
}

input SidelitesUpsertWithWhereUniqueWithoutDoorsInput {
  where: SidelitesWhereUniqueInput!
  update: SidelitesUpdateWithoutDoorsDataInput!
  create: SidelitesCreateWithoutDoorsInput!
}

input SidelitesWhereInput {
  """Logical AND on all given filters."""
  AND: [SidelitesWhereInput!]

  """Logical OR on all given filters."""
  OR: [SidelitesWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SidelitesWhereInput!]
  Id: ID

  """All values that are not equal to given value."""
  Id_not: ID

  """All values that are contained in given list."""
  Id_in: [ID!]

  """All values that are not contained in given list."""
  Id_not_in: [ID!]

  """All values less than the given value."""
  Id_lt: ID

  """All values less than or equal the given value."""
  Id_lte: ID

  """All values greater than the given value."""
  Id_gt: ID

  """All values greater than or equal the given value."""
  Id_gte: ID

  """All values containing the given string."""
  Id_contains: ID

  """All values not containing the given string."""
  Id_not_contains: ID

  """All values starting with the given string."""
  Id_starts_with: ID

  """All values not starting with the given string."""
  Id_not_starts_with: ID

  """All values ending with the given string."""
  Id_ends_with: ID

  """All values not ending with the given string."""
  Id_not_ends_with: ID
  DoorType: String

  """All values that are not equal to given value."""
  DoorType_not: String

  """All values that are contained in given list."""
  DoorType_in: [String!]

  """All values that are not contained in given list."""
  DoorType_not_in: [String!]

  """All values less than the given value."""
  DoorType_lt: String

  """All values less than or equal the given value."""
  DoorType_lte: String

  """All values greater than the given value."""
  DoorType_gt: String

  """All values greater than or equal the given value."""
  DoorType_gte: String

  """All values containing the given string."""
  DoorType_contains: String

  """All values not containing the given string."""
  DoorType_not_contains: String

  """All values starting with the given string."""
  DoorType_starts_with: String

  """All values not starting with the given string."""
  DoorType_not_starts_with: String

  """All values ending with the given string."""
  DoorType_ends_with: String

  """All values not ending with the given string."""
  DoorType_not_ends_with: String
  StyleNumber: String

  """All values that are not equal to given value."""
  StyleNumber_not: String

  """All values that are contained in given list."""
  StyleNumber_in: [String!]

  """All values that are not contained in given list."""
  StyleNumber_not_in: [String!]

  """All values less than the given value."""
  StyleNumber_lt: String

  """All values less than or equal the given value."""
  StyleNumber_lte: String

  """All values greater than the given value."""
  StyleNumber_gt: String

  """All values greater than or equal the given value."""
  StyleNumber_gte: String

  """All values containing the given string."""
  StyleNumber_contains: String

  """All values not containing the given string."""
  StyleNumber_not_contains: String

  """All values starting with the given string."""
  StyleNumber_starts_with: String

  """All values not starting with the given string."""
  StyleNumber_not_starts_with: String

  """All values ending with the given string."""
  StyleNumber_ends_with: String

  """All values not ending with the given string."""
  StyleNumber_not_ends_with: String
  DefaultImageName: String

  """All values that are not equal to given value."""
  DefaultImageName_not: String

  """All values that are contained in given list."""
  DefaultImageName_in: [String!]

  """All values that are not contained in given list."""
  DefaultImageName_not_in: [String!]

  """All values less than the given value."""
  DefaultImageName_lt: String

  """All values less than or equal the given value."""
  DefaultImageName_lte: String

  """All values greater than the given value."""
  DefaultImageName_gt: String

  """All values greater than or equal the given value."""
  DefaultImageName_gte: String

  """All values containing the given string."""
  DefaultImageName_contains: String

  """All values not containing the given string."""
  DefaultImageName_not_contains: String

  """All values starting with the given string."""
  DefaultImageName_starts_with: String

  """All values not starting with the given string."""
  DefaultImageName_not_starts_with: String

  """All values ending with the given string."""
  DefaultImageName_ends_with: String

  """All values not ending with the given string."""
  DefaultImageName_not_ends_with: String
  VisualizedWidth: Int

  """All values that are not equal to given value."""
  VisualizedWidth_not: Int

  """All values that are contained in given list."""
  VisualizedWidth_in: [Int!]

  """All values that are not contained in given list."""
  VisualizedWidth_not_in: [Int!]

  """All values less than the given value."""
  VisualizedWidth_lt: Int

  """All values less than or equal the given value."""
  VisualizedWidth_lte: Int

  """All values greater than the given value."""
  VisualizedWidth_gt: Int

  """All values greater than or equal the given value."""
  VisualizedWidth_gte: Int
  ImageUrl: String

  """All values that are not equal to given value."""
  ImageUrl_not: String

  """All values that are contained in given list."""
  ImageUrl_in: [String!]

  """All values that are not contained in given list."""
  ImageUrl_not_in: [String!]

  """All values less than the given value."""
  ImageUrl_lt: String

  """All values less than or equal the given value."""
  ImageUrl_lte: String

  """All values greater than the given value."""
  ImageUrl_gt: String

  """All values greater than or equal the given value."""
  ImageUrl_gte: String

  """All values containing the given string."""
  ImageUrl_contains: String

  """All values not containing the given string."""
  ImageUrl_not_contains: String

  """All values starting with the given string."""
  ImageUrl_starts_with: String

  """All values not starting with the given string."""
  ImageUrl_not_starts_with: String

  """All values ending with the given string."""
  ImageUrl_ends_with: String

  """All values not ending with the given string."""
  ImageUrl_not_ends_with: String
  Doors_every: DoorWhereInput
  Doors_some: DoorWhereInput
  Doors_none: DoorWhereInput
}

input SidelitesWhereUniqueInput {
  Id: ID
  StyleNumber: String
}

type StyleLayoutPairs {
  Id: ID!
  Double_Left: String!
  Double_Right: String
  Triple_Left: String
  Triple_Center: String
  Triple_Right: String
  Quad_Left_Outer: String
  Quad_Left_Inner: String
  Quad_Right_Inner: String
  Quad_Right_Outer: String
  Must_Be_Double: Boolean
  Doors(where: DoorWhereInput, orderBy: DoorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Door!]
}

"""A connection to a list of items."""
type StyleLayoutPairsConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [StyleLayoutPairsEdge]!
  aggregate: AggregateStyleLayoutPairs!
}

input StyleLayoutPairsCreateInput {
  Id: ID
  Double_Left: String!
  Double_Right: String
  Triple_Left: String
  Triple_Center: String
  Triple_Right: String
  Quad_Left_Outer: String
  Quad_Left_Inner: String
  Quad_Right_Inner: String
  Quad_Right_Outer: String
  Must_Be_Double: Boolean
  Doors: DoorCreateManyWithoutStyleLayoutPairsInput
}

input StyleLayoutPairsCreateOneWithoutDoorsInput {
  create: StyleLayoutPairsCreateWithoutDoorsInput
  connect: StyleLayoutPairsWhereUniqueInput
}

input StyleLayoutPairsCreateWithoutDoorsInput {
  Id: ID
  Double_Left: String!
  Double_Right: String
  Triple_Left: String
  Triple_Center: String
  Triple_Right: String
  Quad_Left_Outer: String
  Quad_Left_Inner: String
  Quad_Right_Inner: String
  Quad_Right_Outer: String
  Must_Be_Double: Boolean
}

"""An edge in a connection."""
type StyleLayoutPairsEdge {
  """The item at the end of the edge."""
  node: StyleLayoutPairs!

  """A cursor for use in pagination."""
  cursor: String!
}

enum StyleLayoutPairsOrderByInput {
  Id_ASC
  Id_DESC
  Double_Left_ASC
  Double_Left_DESC
  Double_Right_ASC
  Double_Right_DESC
  Triple_Left_ASC
  Triple_Left_DESC
  Triple_Center_ASC
  Triple_Center_DESC
  Triple_Right_ASC
  Triple_Right_DESC
  Quad_Left_Outer_ASC
  Quad_Left_Outer_DESC
  Quad_Left_Inner_ASC
  Quad_Left_Inner_DESC
  Quad_Right_Inner_ASC
  Quad_Right_Inner_DESC
  Quad_Right_Outer_ASC
  Quad_Right_Outer_DESC
  Must_Be_Double_ASC
  Must_Be_Double_DESC
}

type StyleLayoutPairsPreviousValues {
  Id: ID!
  Double_Left: String!
  Double_Right: String
  Triple_Left: String
  Triple_Center: String
  Triple_Right: String
  Quad_Left_Outer: String
  Quad_Left_Inner: String
  Quad_Right_Inner: String
  Quad_Right_Outer: String
  Must_Be_Double: Boolean
}

type StyleLayoutPairsSubscriptionPayload {
  mutation: MutationType!
  node: StyleLayoutPairs
  updatedFields: [String!]
  previousValues: StyleLayoutPairsPreviousValues
}

input StyleLayoutPairsSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [StyleLayoutPairsSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [StyleLayoutPairsSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [StyleLayoutPairsSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: StyleLayoutPairsWhereInput
}

input StyleLayoutPairsUpdateInput {
  Double_Left: String
  Double_Right: String
  Triple_Left: String
  Triple_Center: String
  Triple_Right: String
  Quad_Left_Outer: String
  Quad_Left_Inner: String
  Quad_Right_Inner: String
  Quad_Right_Outer: String
  Must_Be_Double: Boolean
  Doors: DoorUpdateManyWithoutStyleLayoutPairsInput
}

input StyleLayoutPairsUpdateManyMutationInput {
  Double_Left: String
  Double_Right: String
  Triple_Left: String
  Triple_Center: String
  Triple_Right: String
  Quad_Left_Outer: String
  Quad_Left_Inner: String
  Quad_Right_Inner: String
  Quad_Right_Outer: String
  Must_Be_Double: Boolean
}

input StyleLayoutPairsUpdateOneWithoutDoorsInput {
  create: StyleLayoutPairsCreateWithoutDoorsInput
  connect: StyleLayoutPairsWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: StyleLayoutPairsUpdateWithoutDoorsDataInput
  upsert: StyleLayoutPairsUpsertWithoutDoorsInput
}

input StyleLayoutPairsUpdateWithoutDoorsDataInput {
  Double_Left: String
  Double_Right: String
  Triple_Left: String
  Triple_Center: String
  Triple_Right: String
  Quad_Left_Outer: String
  Quad_Left_Inner: String
  Quad_Right_Inner: String
  Quad_Right_Outer: String
  Must_Be_Double: Boolean
}

input StyleLayoutPairsUpsertWithoutDoorsInput {
  update: StyleLayoutPairsUpdateWithoutDoorsDataInput!
  create: StyleLayoutPairsCreateWithoutDoorsInput!
}

input StyleLayoutPairsWhereInput {
  """Logical AND on all given filters."""
  AND: [StyleLayoutPairsWhereInput!]

  """Logical OR on all given filters."""
  OR: [StyleLayoutPairsWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [StyleLayoutPairsWhereInput!]
  Id: ID

  """All values that are not equal to given value."""
  Id_not: ID

  """All values that are contained in given list."""
  Id_in: [ID!]

  """All values that are not contained in given list."""
  Id_not_in: [ID!]

  """All values less than the given value."""
  Id_lt: ID

  """All values less than or equal the given value."""
  Id_lte: ID

  """All values greater than the given value."""
  Id_gt: ID

  """All values greater than or equal the given value."""
  Id_gte: ID

  """All values containing the given string."""
  Id_contains: ID

  """All values not containing the given string."""
  Id_not_contains: ID

  """All values starting with the given string."""
  Id_starts_with: ID

  """All values not starting with the given string."""
  Id_not_starts_with: ID

  """All values ending with the given string."""
  Id_ends_with: ID

  """All values not ending with the given string."""
  Id_not_ends_with: ID
  Double_Left: String

  """All values that are not equal to given value."""
  Double_Left_not: String

  """All values that are contained in given list."""
  Double_Left_in: [String!]

  """All values that are not contained in given list."""
  Double_Left_not_in: [String!]

  """All values less than the given value."""
  Double_Left_lt: String

  """All values less than or equal the given value."""
  Double_Left_lte: String

  """All values greater than the given value."""
  Double_Left_gt: String

  """All values greater than or equal the given value."""
  Double_Left_gte: String

  """All values containing the given string."""
  Double_Left_contains: String

  """All values not containing the given string."""
  Double_Left_not_contains: String

  """All values starting with the given string."""
  Double_Left_starts_with: String

  """All values not starting with the given string."""
  Double_Left_not_starts_with: String

  """All values ending with the given string."""
  Double_Left_ends_with: String

  """All values not ending with the given string."""
  Double_Left_not_ends_with: String
  Double_Right: String

  """All values that are not equal to given value."""
  Double_Right_not: String

  """All values that are contained in given list."""
  Double_Right_in: [String!]

  """All values that are not contained in given list."""
  Double_Right_not_in: [String!]

  """All values less than the given value."""
  Double_Right_lt: String

  """All values less than or equal the given value."""
  Double_Right_lte: String

  """All values greater than the given value."""
  Double_Right_gt: String

  """All values greater than or equal the given value."""
  Double_Right_gte: String

  """All values containing the given string."""
  Double_Right_contains: String

  """All values not containing the given string."""
  Double_Right_not_contains: String

  """All values starting with the given string."""
  Double_Right_starts_with: String

  """All values not starting with the given string."""
  Double_Right_not_starts_with: String

  """All values ending with the given string."""
  Double_Right_ends_with: String

  """All values not ending with the given string."""
  Double_Right_not_ends_with: String
  Triple_Left: String

  """All values that are not equal to given value."""
  Triple_Left_not: String

  """All values that are contained in given list."""
  Triple_Left_in: [String!]

  """All values that are not contained in given list."""
  Triple_Left_not_in: [String!]

  """All values less than the given value."""
  Triple_Left_lt: String

  """All values less than or equal the given value."""
  Triple_Left_lte: String

  """All values greater than the given value."""
  Triple_Left_gt: String

  """All values greater than or equal the given value."""
  Triple_Left_gte: String

  """All values containing the given string."""
  Triple_Left_contains: String

  """All values not containing the given string."""
  Triple_Left_not_contains: String

  """All values starting with the given string."""
  Triple_Left_starts_with: String

  """All values not starting with the given string."""
  Triple_Left_not_starts_with: String

  """All values ending with the given string."""
  Triple_Left_ends_with: String

  """All values not ending with the given string."""
  Triple_Left_not_ends_with: String
  Triple_Center: String

  """All values that are not equal to given value."""
  Triple_Center_not: String

  """All values that are contained in given list."""
  Triple_Center_in: [String!]

  """All values that are not contained in given list."""
  Triple_Center_not_in: [String!]

  """All values less than the given value."""
  Triple_Center_lt: String

  """All values less than or equal the given value."""
  Triple_Center_lte: String

  """All values greater than the given value."""
  Triple_Center_gt: String

  """All values greater than or equal the given value."""
  Triple_Center_gte: String

  """All values containing the given string."""
  Triple_Center_contains: String

  """All values not containing the given string."""
  Triple_Center_not_contains: String

  """All values starting with the given string."""
  Triple_Center_starts_with: String

  """All values not starting with the given string."""
  Triple_Center_not_starts_with: String

  """All values ending with the given string."""
  Triple_Center_ends_with: String

  """All values not ending with the given string."""
  Triple_Center_not_ends_with: String
  Triple_Right: String

  """All values that are not equal to given value."""
  Triple_Right_not: String

  """All values that are contained in given list."""
  Triple_Right_in: [String!]

  """All values that are not contained in given list."""
  Triple_Right_not_in: [String!]

  """All values less than the given value."""
  Triple_Right_lt: String

  """All values less than or equal the given value."""
  Triple_Right_lte: String

  """All values greater than the given value."""
  Triple_Right_gt: String

  """All values greater than or equal the given value."""
  Triple_Right_gte: String

  """All values containing the given string."""
  Triple_Right_contains: String

  """All values not containing the given string."""
  Triple_Right_not_contains: String

  """All values starting with the given string."""
  Triple_Right_starts_with: String

  """All values not starting with the given string."""
  Triple_Right_not_starts_with: String

  """All values ending with the given string."""
  Triple_Right_ends_with: String

  """All values not ending with the given string."""
  Triple_Right_not_ends_with: String
  Quad_Left_Outer: String

  """All values that are not equal to given value."""
  Quad_Left_Outer_not: String

  """All values that are contained in given list."""
  Quad_Left_Outer_in: [String!]

  """All values that are not contained in given list."""
  Quad_Left_Outer_not_in: [String!]

  """All values less than the given value."""
  Quad_Left_Outer_lt: String

  """All values less than or equal the given value."""
  Quad_Left_Outer_lte: String

  """All values greater than the given value."""
  Quad_Left_Outer_gt: String

  """All values greater than or equal the given value."""
  Quad_Left_Outer_gte: String

  """All values containing the given string."""
  Quad_Left_Outer_contains: String

  """All values not containing the given string."""
  Quad_Left_Outer_not_contains: String

  """All values starting with the given string."""
  Quad_Left_Outer_starts_with: String

  """All values not starting with the given string."""
  Quad_Left_Outer_not_starts_with: String

  """All values ending with the given string."""
  Quad_Left_Outer_ends_with: String

  """All values not ending with the given string."""
  Quad_Left_Outer_not_ends_with: String
  Quad_Left_Inner: String

  """All values that are not equal to given value."""
  Quad_Left_Inner_not: String

  """All values that are contained in given list."""
  Quad_Left_Inner_in: [String!]

  """All values that are not contained in given list."""
  Quad_Left_Inner_not_in: [String!]

  """All values less than the given value."""
  Quad_Left_Inner_lt: String

  """All values less than or equal the given value."""
  Quad_Left_Inner_lte: String

  """All values greater than the given value."""
  Quad_Left_Inner_gt: String

  """All values greater than or equal the given value."""
  Quad_Left_Inner_gte: String

  """All values containing the given string."""
  Quad_Left_Inner_contains: String

  """All values not containing the given string."""
  Quad_Left_Inner_not_contains: String

  """All values starting with the given string."""
  Quad_Left_Inner_starts_with: String

  """All values not starting with the given string."""
  Quad_Left_Inner_not_starts_with: String

  """All values ending with the given string."""
  Quad_Left_Inner_ends_with: String

  """All values not ending with the given string."""
  Quad_Left_Inner_not_ends_with: String
  Quad_Right_Inner: String

  """All values that are not equal to given value."""
  Quad_Right_Inner_not: String

  """All values that are contained in given list."""
  Quad_Right_Inner_in: [String!]

  """All values that are not contained in given list."""
  Quad_Right_Inner_not_in: [String!]

  """All values less than the given value."""
  Quad_Right_Inner_lt: String

  """All values less than or equal the given value."""
  Quad_Right_Inner_lte: String

  """All values greater than the given value."""
  Quad_Right_Inner_gt: String

  """All values greater than or equal the given value."""
  Quad_Right_Inner_gte: String

  """All values containing the given string."""
  Quad_Right_Inner_contains: String

  """All values not containing the given string."""
  Quad_Right_Inner_not_contains: String

  """All values starting with the given string."""
  Quad_Right_Inner_starts_with: String

  """All values not starting with the given string."""
  Quad_Right_Inner_not_starts_with: String

  """All values ending with the given string."""
  Quad_Right_Inner_ends_with: String

  """All values not ending with the given string."""
  Quad_Right_Inner_not_ends_with: String
  Quad_Right_Outer: String

  """All values that are not equal to given value."""
  Quad_Right_Outer_not: String

  """All values that are contained in given list."""
  Quad_Right_Outer_in: [String!]

  """All values that are not contained in given list."""
  Quad_Right_Outer_not_in: [String!]

  """All values less than the given value."""
  Quad_Right_Outer_lt: String

  """All values less than or equal the given value."""
  Quad_Right_Outer_lte: String

  """All values greater than the given value."""
  Quad_Right_Outer_gt: String

  """All values greater than or equal the given value."""
  Quad_Right_Outer_gte: String

  """All values containing the given string."""
  Quad_Right_Outer_contains: String

  """All values not containing the given string."""
  Quad_Right_Outer_not_contains: String

  """All values starting with the given string."""
  Quad_Right_Outer_starts_with: String

  """All values not starting with the given string."""
  Quad_Right_Outer_not_starts_with: String

  """All values ending with the given string."""
  Quad_Right_Outer_ends_with: String

  """All values not ending with the given string."""
  Quad_Right_Outer_not_ends_with: String
  Must_Be_Double: Boolean

  """All values that are not equal to given value."""
  Must_Be_Double_not: Boolean
  Doors_every: DoorWhereInput
  Doors_some: DoorWhereInput
  Doors_none: DoorWhereInput
}

input StyleLayoutPairsWhereUniqueInput {
  Id: ID
  Double_Left: String
}

type StyleShape {
  Id: ID!
  Brand: String
  Name: String
  Abbreviation: String!
  TopCut: Int
  Doors(where: DoorWhereInput, orderBy: DoorOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Door!]
}

"""A connection to a list of items."""
type StyleShapeConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [StyleShapeEdge]!
  aggregate: AggregateStyleShape!
}

input StyleShapeCreateInput {
  Id: ID
  Brand: String
  Name: String
  Abbreviation: String!
  TopCut: Int
  Doors: DoorCreateManyWithoutStyleShapeInput
}

input StyleShapeCreateOneWithoutDoorsInput {
  create: StyleShapeCreateWithoutDoorsInput
  connect: StyleShapeWhereUniqueInput
}

input StyleShapeCreateWithoutDoorsInput {
  Id: ID
  Brand: String
  Name: String
  Abbreviation: String!
  TopCut: Int
}

"""An edge in a connection."""
type StyleShapeEdge {
  """The item at the end of the edge."""
  node: StyleShape!

  """A cursor for use in pagination."""
  cursor: String!
}

enum StyleShapeOrderByInput {
  Id_ASC
  Id_DESC
  Brand_ASC
  Brand_DESC
  Name_ASC
  Name_DESC
  Abbreviation_ASC
  Abbreviation_DESC
  TopCut_ASC
  TopCut_DESC
}

type StyleShapePreviousValues {
  Id: ID!
  Brand: String
  Name: String
  Abbreviation: String!
  TopCut: Int
}

type StyleShapeSubscriptionPayload {
  mutation: MutationType!
  node: StyleShape
  updatedFields: [String!]
  previousValues: StyleShapePreviousValues
}

input StyleShapeSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [StyleShapeSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [StyleShapeSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [StyleShapeSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: StyleShapeWhereInput
}

input StyleShapeUpdateInput {
  Brand: String
  Name: String
  Abbreviation: String
  TopCut: Int
  Doors: DoorUpdateManyWithoutStyleShapeInput
}

input StyleShapeUpdateManyMutationInput {
  Brand: String
  Name: String
  Abbreviation: String
  TopCut: Int
}

input StyleShapeUpdateOneWithoutDoorsInput {
  create: StyleShapeCreateWithoutDoorsInput
  connect: StyleShapeWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: StyleShapeUpdateWithoutDoorsDataInput
  upsert: StyleShapeUpsertWithoutDoorsInput
}

input StyleShapeUpdateWithoutDoorsDataInput {
  Brand: String
  Name: String
  Abbreviation: String
  TopCut: Int
}

input StyleShapeUpsertWithoutDoorsInput {
  update: StyleShapeUpdateWithoutDoorsDataInput!
  create: StyleShapeCreateWithoutDoorsInput!
}

input StyleShapeWhereInput {
  """Logical AND on all given filters."""
  AND: [StyleShapeWhereInput!]

  """Logical OR on all given filters."""
  OR: [StyleShapeWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [StyleShapeWhereInput!]
  Id: ID

  """All values that are not equal to given value."""
  Id_not: ID

  """All values that are contained in given list."""
  Id_in: [ID!]

  """All values that are not contained in given list."""
  Id_not_in: [ID!]

  """All values less than the given value."""
  Id_lt: ID

  """All values less than or equal the given value."""
  Id_lte: ID

  """All values greater than the given value."""
  Id_gt: ID

  """All values greater than or equal the given value."""
  Id_gte: ID

  """All values containing the given string."""
  Id_contains: ID

  """All values not containing the given string."""
  Id_not_contains: ID

  """All values starting with the given string."""
  Id_starts_with: ID

  """All values not starting with the given string."""
  Id_not_starts_with: ID

  """All values ending with the given string."""
  Id_ends_with: ID

  """All values not ending with the given string."""
  Id_not_ends_with: ID
  Brand: String

  """All values that are not equal to given value."""
  Brand_not: String

  """All values that are contained in given list."""
  Brand_in: [String!]

  """All values that are not contained in given list."""
  Brand_not_in: [String!]

  """All values less than the given value."""
  Brand_lt: String

  """All values less than or equal the given value."""
  Brand_lte: String

  """All values greater than the given value."""
  Brand_gt: String

  """All values greater than or equal the given value."""
  Brand_gte: String

  """All values containing the given string."""
  Brand_contains: String

  """All values not containing the given string."""
  Brand_not_contains: String

  """All values starting with the given string."""
  Brand_starts_with: String

  """All values not starting with the given string."""
  Brand_not_starts_with: String

  """All values ending with the given string."""
  Brand_ends_with: String

  """All values not ending with the given string."""
  Brand_not_ends_with: String
  Name: String

  """All values that are not equal to given value."""
  Name_not: String

  """All values that are contained in given list."""
  Name_in: [String!]

  """All values that are not contained in given list."""
  Name_not_in: [String!]

  """All values less than the given value."""
  Name_lt: String

  """All values less than or equal the given value."""
  Name_lte: String

  """All values greater than the given value."""
  Name_gt: String

  """All values greater than or equal the given value."""
  Name_gte: String

  """All values containing the given string."""
  Name_contains: String

  """All values not containing the given string."""
  Name_not_contains: String

  """All values starting with the given string."""
  Name_starts_with: String

  """All values not starting with the given string."""
  Name_not_starts_with: String

  """All values ending with the given string."""
  Name_ends_with: String

  """All values not ending with the given string."""
  Name_not_ends_with: String
  Abbreviation: String

  """All values that are not equal to given value."""
  Abbreviation_not: String

  """All values that are contained in given list."""
  Abbreviation_in: [String!]

  """All values that are not contained in given list."""
  Abbreviation_not_in: [String!]

  """All values less than the given value."""
  Abbreviation_lt: String

  """All values less than or equal the given value."""
  Abbreviation_lte: String

  """All values greater than the given value."""
  Abbreviation_gt: String

  """All values greater than or equal the given value."""
  Abbreviation_gte: String

  """All values containing the given string."""
  Abbreviation_contains: String

  """All values not containing the given string."""
  Abbreviation_not_contains: String

  """All values starting with the given string."""
  Abbreviation_starts_with: String

  """All values not starting with the given string."""
  Abbreviation_not_starts_with: String

  """All values ending with the given string."""
  Abbreviation_ends_with: String

  """All values not ending with the given string."""
  Abbreviation_not_ends_with: String
  TopCut: Int

  """All values that are not equal to given value."""
  TopCut_not: Int

  """All values that are contained in given list."""
  TopCut_in: [Int!]

  """All values that are not contained in given list."""
  TopCut_not_in: [Int!]

  """All values less than the given value."""
  TopCut_lt: Int

  """All values less than or equal the given value."""
  TopCut_lte: Int

  """All values greater than the given value."""
  TopCut_gt: Int

  """All values greater than or equal the given value."""
  TopCut_gte: Int
  Doors_every: DoorWhereInput
  Doors_some: DoorWhereInput
  Doors_none: DoorWhereInput
}

input StyleShapeWhereUniqueInput {
  Id: ID
  Abbreviation: String
}

type Subscription {
  door(where: DoorSubscriptionWhereInput): DoorSubscriptionPayload
  doorCollection(where: DoorCollectionSubscriptionWhereInput): DoorCollectionSubscriptionPayload
  doorLine(where: DoorLineSubscriptionWhereInput): DoorLineSubscriptionPayload
  styleShape(where: StyleShapeSubscriptionWhereInput): StyleShapeSubscriptionPayload
  sidelites(where: SidelitesSubscriptionWhereInput): SidelitesSubscriptionPayload
  styleLayoutPairs(where: StyleLayoutPairsSubscriptionWhereInput): StyleLayoutPairsSubscriptionPayload
  frameProfiles(where: FrameProfilesSubscriptionWhereInput): FrameProfilesSubscriptionPayload
}
